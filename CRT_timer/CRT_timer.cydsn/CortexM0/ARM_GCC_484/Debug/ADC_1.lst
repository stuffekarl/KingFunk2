ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	ADC_1_initVar
  18              		.bss
  19              		.type	ADC_1_initVar, %object
  20              		.size	ADC_1_initVar, 1
  21              	ADC_1_initVar:
  22 0000 00       		.space	1
  23              		.comm	ADC_1_offset,4,4
  24              		.comm	ADC_1_countsPer10Volt,8,4
  25              		.section	.rodata
  26              		.align	2
  27              		.type	ADC_1_channelsConfig, %object
  28              		.size	ADC_1_channelsConfig, 8
  29              	ADC_1_channelsConfig:
  30 0000 00000000 		.word	0
  31 0004 00020000 		.word	512
  32              		.section	.text.ADC_1_Start,"ax",%progbits
  33              		.align	2
  34              		.global	ADC_1_Start
  35              		.code	16
  36              		.thumb_func
  37              		.type	ADC_1_Start, %function
  38              	ADC_1_Start:
  39              	.LFB0:
  40              		.file 1 ".\\Generated_Source\\PSoC4\\ADC_1.c"
   1:.\Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC_1.c **** * File Name: ADC_1.c
   3:.\Generated_Source\PSoC4/ADC_1.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/ADC_1.c **** *
   5:.\Generated_Source\PSoC4/ADC_1.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC_1.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC_1.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC_1.c **** *
   9:.\Generated_Source\PSoC4/ADC_1.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC_1.c **** *
  11:.\Generated_Source\PSoC4/ADC_1.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC_1.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC_1.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC_1.c **** 
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 2


  18:.\Generated_Source\PSoC4/ADC_1.c **** #include "ADC_1.h"
  19:.\Generated_Source\PSoC4/ADC_1.c **** 
  20:.\Generated_Source\PSoC4/ADC_1.c **** 
  21:.\Generated_Source\PSoC4/ADC_1.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC_1.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC_1.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC_1.c **** uint8 ADC_1_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC_1.c **** volatile int16 ADC_1_offset[ADC_1_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC_1.c **** volatile int32 ADC_1_countsPer10Volt[ADC_1_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:.\Generated_Source\PSoC4/ADC_1.c **** 
  28:.\Generated_Source\PSoC4/ADC_1.c **** 
  29:.\Generated_Source\PSoC4/ADC_1.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC_1.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC_1.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC_1.c **** /* Channels configuration generated by customiser */
  33:.\Generated_Source\PSoC4/ADC_1.c **** static const uint32 CYCODE ADC_1_channelsConfig[] = { 0x00000000u, 0x00000200u };
  34:.\Generated_Source\PSoC4/ADC_1.c **** 
  35:.\Generated_Source\PSoC4/ADC_1.c **** 
  36:.\Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Start
  38:.\Generated_Source\PSoC4/ADC_1.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC_1.c **** *
  40:.\Generated_Source\PSoC4/ADC_1.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC_1.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC_1.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC_1.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC_1.c **** *
  45:.\Generated_Source\PSoC4/ADC_1.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC_1.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC_1.c **** *
  48:.\Generated_Source\PSoC4/ADC_1.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC_1.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC_1.c **** *
  51:.\Generated_Source\PSoC4/ADC_1.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC_1.c **** *  The ADC_1_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC_1.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC_1.c **** *  ADC_1_Start() routine.
  57:.\Generated_Source\PSoC4/ADC_1.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC_1.c **** *  to zero before call of ADC_1_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC_1.c **** *  ADC_1_Init() and ADC_1_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC_1.c **** *  ADC_1_Start() routine.
  61:.\Generated_Source\PSoC4/ADC_1.c **** *
  62:.\Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Start(void)
  64:.\Generated_Source\PSoC4/ADC_1.c **** {
  41              		.loc 1 64 0
  42              		.cfi_startproc
  43 0000 80B5     		push	{r7, lr}
  44              		.cfi_def_cfa_offset 8
  45              		.cfi_offset 7, -8
  46              		.cfi_offset 14, -4
  47 0002 00AF     		add	r7, sp, #0
  48              		.cfi_def_cfa_register 7
  65:.\Generated_Source\PSoC4/ADC_1.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_initVar == 0u)
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 3


  49              		.loc 1 66 0
  50 0004 064B     		ldr	r3, .L3
  51 0006 1B78     		ldrb	r3, [r3]
  52 0008 002B     		cmp	r3, #0
  53 000a 04D1     		bne	.L2
  67:.\Generated_Source\PSoC4/ADC_1.c ****     {
  68:.\Generated_Source\PSoC4/ADC_1.c ****         ADC_1_Init();
  54              		.loc 1 68 0
  55 000c FFF7FEFF 		bl	ADC_1_Init
  69:.\Generated_Source\PSoC4/ADC_1.c ****         ADC_1_initVar = 1u;
  56              		.loc 1 69 0
  57 0010 034B     		ldr	r3, .L3
  58 0012 0122     		mov	r2, #1
  59 0014 1A70     		strb	r2, [r3]
  60              	.L2:
  70:.\Generated_Source\PSoC4/ADC_1.c ****     }
  71:.\Generated_Source\PSoC4/ADC_1.c ****     ADC_1_Enable();
  61              		.loc 1 71 0
  62 0016 FFF7FEFF 		bl	ADC_1_Enable
  72:.\Generated_Source\PSoC4/ADC_1.c **** }
  63              		.loc 1 72 0
  64 001a BD46     		mov	sp, r7
  65              		@ sp needed
  66 001c 80BD     		pop	{r7, pc}
  67              	.L4:
  68 001e C046     		.align	2
  69              	.L3:
  70 0020 00000000 		.word	ADC_1_initVar
  71              		.cfi_endproc
  72              	.LFE0:
  73              		.size	ADC_1_Start, .-ADC_1_Start
  74              		.global	__aeabi_idiv
  75              		.section	.text.ADC_1_Init,"ax",%progbits
  76              		.align	2
  77              		.global	ADC_1_Init
  78              		.code	16
  79              		.thumb_func
  80              		.type	ADC_1_Init, %function
  81              	ADC_1_Init:
  82              	.LFB1:
  73:.\Generated_Source\PSoC4/ADC_1.c **** 
  74:.\Generated_Source\PSoC4/ADC_1.c **** 
  75:.\Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Init
  77:.\Generated_Source\PSoC4/ADC_1.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC_1.c **** *
  79:.\Generated_Source\PSoC4/ADC_1.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC_1.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC_1.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC_1.c **** *  ADC_1_Start().
  83:.\Generated_Source\PSoC4/ADC_1.c **** *
  84:.\Generated_Source\PSoC4/ADC_1.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC_1.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC_1.c **** *
  87:.\Generated_Source\PSoC4/ADC_1.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC_1.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 4


  90:.\Generated_Source\PSoC4/ADC_1.c **** * Global variables:
  91:.\Generated_Source\PSoC4/ADC_1.c **** *  The ADC_1_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC_1.c **** *
  93:.\Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Init(void)
  95:.\Generated_Source\PSoC4/ADC_1.c **** {
  83              		.loc 1 95 0
  84              		.cfi_startproc
  85 0000 90B5     		push	{r4, r7, lr}
  86              		.cfi_def_cfa_offset 12
  87              		.cfi_offset 4, -12
  88              		.cfi_offset 7, -8
  89              		.cfi_offset 14, -4
  90 0002 85B0     		sub	sp, sp, #20
  91              		.cfi_def_cfa_offset 32
  92 0004 00AF     		add	r7, sp, #0
  93              		.cfi_def_cfa_register 7
  96:.\Generated_Source\PSoC4/ADC_1.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC_1.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC_1.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC_1.c **** 
 100:.\Generated_Source\PSoC4/ADC_1.c ****     #if(ADC_1_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC_1.c ****         static const uint8 CYCODE ADC_1_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC_1.c ****         {
 103:.\Generated_Source\PSoC4/ADC_1.c ****             (uint8)(ADC_1_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC_1.c ****             (uint8)ADC_1_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC_1.c ****             ,(uint8)(ADC_1_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC_1.c ****              (uint8)ADC_1_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC_1.c ****             #if(ADC_1_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC_1.c ****                 ,(uint8)(ADC_1_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC_1.c ****                  (uint8)ADC_1_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC_1.c ****             #endif /* End ADC_1_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC_1.c ****             #if(ADC_1_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC_1.c ****                 ,(uint8)(ADC_1_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC_1.c ****                  (uint8)ADC_1_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC_1.c ****             #endif /* End ADC_1_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC_1.c ****             #if(ADC_1_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC_1.c ****                 ,(uint8)(ADC_1_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC_1.c ****                  (uint8)ADC_1_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC_1.c ****             #endif /* End ADC_1_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC_1.c ****             #if(ADC_1_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC_1.c ****                 ,(uint8)(ADC_1_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC_1.c ****                  (uint8)ADC_1_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC_1.c ****             #endif /* End ADC_1_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC_1.c ****             #if(ADC_1_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC_1.c ****                 ,(uint8)(ADC_1_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC_1.c ****                  (uint8)ADC_1_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC_1.c ****             #endif /* End ADC_1_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC_1.c ****             #if(ADC_1_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC_1.c ****                 ,(uint8)(ADC_1_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC_1.c ****                  (uint8)ADC_1_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC_1.c ****             #endif /* End ADC_1_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC_1.c ****             #if(ADC_1_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC_1.c ****                 ,(uint8)(ADC_1_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC_1.c ****                  (uint8)ADC_1_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC_1.c ****             #endif /* End ADC_1_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC_1.c ****         };
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 5


 136:.\Generated_Source\PSoC4/ADC_1.c ****     #endif /* End ADC_1_TOTAL_CHANNELS_NUM > 1u */
 137:.\Generated_Source\PSoC4/ADC_1.c **** 
 138:.\Generated_Source\PSoC4/ADC_1.c ****     #if(ADC_1_IRQ_REMOVE == 0u)
 139:.\Generated_Source\PSoC4/ADC_1.c ****         /* Start and set interrupt vector */
 140:.\Generated_Source\PSoC4/ADC_1.c ****         CyIntSetPriority(ADC_1_INTC_NUMBER, ADC_1_INTC_PRIOR_NUMBER);
  94              		.loc 1 140 0
  95 0006 0E20     		mov	r0, #14
  96 0008 0321     		mov	r1, #3
  97 000a FFF7FEFF 		bl	CyIntSetPriority
 141:.\Generated_Source\PSoC4/ADC_1.c ****         (void)CyIntSetVector(ADC_1_INTC_NUMBER, &ADC_1_ISR);
  98              		.loc 1 141 0
  99 000e 5C4B     		ldr	r3, .L14
 100 0010 0E20     		mov	r0, #14
 101 0012 191C     		mov	r1, r3
 102 0014 FFF7FEFF 		bl	CyIntSetVector
 142:.\Generated_Source\PSoC4/ADC_1.c ****     #endif   /* End ADC_1_IRQ_REMOVE */
 143:.\Generated_Source\PSoC4/ADC_1.c **** 
 144:.\Generated_Source\PSoC4/ADC_1.c ****     /* Init SAR and MUX registers */
 145:.\Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CHAN_EN_REG = ADC_1_DEFAULT_EN_CHANNELS;
 103              		.loc 1 145 0
 104 0018 5A4B     		ldr	r3, .L14+4
 105 001a 0322     		mov	r2, #3
 106 001c 1A60     		str	r2, [r3]
 146:.\Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CTRL_REG = ADC_1_DEFAULT_CTRL_REG_CFG;
 107              		.loc 1 146 0
 108 001e 5A4B     		ldr	r3, .L14+8
 109 0020 5A4A     		ldr	r2, .L14+12
 110 0022 1A60     		str	r2, [r3]
 147:.\Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_CTRL_REG = ADC_1_DEFAULT_SAMPLE_CTRL_REG_CFG;
 111              		.loc 1 147 0
 112 0024 5A4B     		ldr	r3, .L14+16
 113 0026 5B4A     		ldr	r2, .L14+20
 114 0028 1A60     		str	r2, [r3]
 148:.\Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG = ADC_1_DEFAULT_RANGE_THRES_REG_CFG;
 115              		.loc 1 148 0
 116 002a 5B4B     		ldr	r3, .L14+24
 117 002c 5B4A     		ldr	r2, .L14+28
 118 002e 1A60     		str	r2, [r3]
 149:.\Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_COND_REG  = ADC_1_COMPARE_MODE;
 119              		.loc 1 149 0
 120 0030 5B4B     		ldr	r3, .L14+32
 121 0032 0022     		mov	r2, #0
 122 0034 1A60     		str	r2, [r3]
 150:.\Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_TIME01_REG = ADC_1_DEFAULT_SAMPLE_TIME01_REG_CFG;
 123              		.loc 1 150 0
 124 0036 5B4B     		ldr	r3, .L14+36
 125 0038 5B4A     		ldr	r2, .L14+40
 126 003a 1A60     		str	r2, [r3]
 151:.\Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SAMPLE_TIME23_REG = ADC_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
 127              		.loc 1 151 0
 128 003c 5B4B     		ldr	r3, .L14+44
 129 003e 5A4A     		ldr	r2, .L14+40
 130 0040 1A60     		str	r2, [r3]
 152:.\Generated_Source\PSoC4/ADC_1.c ****     
 153:.\Generated_Source\PSoC4/ADC_1.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 154:.\Generated_Source\PSoC4/ADC_1.c ****     #if(ADC_1_DEFAULT_MUX_SWITCH0 != 0u)
 155:.\Generated_Source\PSoC4/ADC_1.c ****         ADC_1_MUX_SWITCH0_REG |= ADC_1_DEFAULT_MUX_SWITCH0;
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 6


 131              		.loc 1 155 0
 132 0042 5B4B     		ldr	r3, .L14+48
 133 0044 5A4A     		ldr	r2, .L14+48
 134 0046 1268     		ldr	r2, [r2]
 135 0048 8021     		mov	r1, #128
 136 004a 4902     		lsl	r1, r1, #9
 137 004c 0A43     		orr	r2, r1
 138 004e 1A60     		str	r2, [r3]
 156:.\Generated_Source\PSoC4/ADC_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 157:.\Generated_Source\PSoC4/ADC_1.c ****         #if(ADC_1_TOTAL_CHANNELS_NUM > 1u)
 158:.\Generated_Source\PSoC4/ADC_1.c ****             ADC_1_MUX_SWITCH_HW_CTRL_REG |= ADC_1_DEFAULT_MUX_SWITCH0;
 139              		.loc 1 158 0
 140 0050 584B     		ldr	r3, .L14+52
 141 0052 584A     		ldr	r2, .L14+52
 142 0054 1268     		ldr	r2, [r2]
 143 0056 8021     		mov	r1, #128
 144 0058 4902     		lsl	r1, r1, #9
 145 005a 0A43     		orr	r2, r1
 146 005c 1A60     		str	r2, [r3]
 159:.\Generated_Source\PSoC4/ADC_1.c ****         #endif /* ADC_1_TOTAL_CHANNELS_NUM > 1u */
 160:.\Generated_Source\PSoC4/ADC_1.c ****     #endif /*ADC_1_CHANNELS_MODE !=0 */
 161:.\Generated_Source\PSoC4/ADC_1.c **** 
 162:.\Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SATURATE_INTR_MASK_REG = 0u;
 147              		.loc 1 162 0
 148 005e 564B     		ldr	r3, .L14+56
 149 0060 0022     		mov	r2, #0
 150 0062 1A60     		str	r2, [r3]
 163:.\Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = 0u;
 151              		.loc 1 163 0
 152 0064 554B     		ldr	r3, .L14+60
 153 0066 0022     		mov	r2, #0
 154 0068 1A60     		str	r2, [r3]
 164:.\Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_INTR_MASK_REG = ADC_1_SAR_INTR_MASK;
 155              		.loc 1 164 0
 156 006a 554B     		ldr	r3, .L14+64
 157 006c 0122     		mov	r2, #1
 158 006e 1A60     		str	r2, [r3]
 165:.\Generated_Source\PSoC4/ADC_1.c **** 
 166:.\Generated_Source\PSoC4/ADC_1.c ****     #if(ADC_1_CY_SAR_IP_VER == ADC_1_CY_SAR_IP_PSOC4)
 167:.\Generated_Source\PSoC4/ADC_1.c ****         ADC_1_ANA_TRIM_REG = ADC_1_TRIM_COEF;
 159              		.loc 1 167 0
 160 0070 544B     		ldr	r3, .L14+68
 161 0072 0222     		mov	r2, #2
 162 0074 1A60     		str	r2, [r3]
 168:.\Generated_Source\PSoC4/ADC_1.c ****     #endif /* (ADC_1_CY_SAR_IP_VER == ADC_1_CY_SAR_IP_PSOC4) */
 169:.\Generated_Source\PSoC4/ADC_1.c **** 
 170:.\Generated_Source\PSoC4/ADC_1.c ****     /* Read and modify default configuration based on characterization */
 171:.\Generated_Source\PSoC4/ADC_1.c ****     tmpRegVal = ADC_1_SAR_DFT_CTRL_REG;
 163              		.loc 1 171 0
 164 0076 544B     		ldr	r3, .L14+72
 165 0078 1B68     		ldr	r3, [r3]
 166 007a 7B60     		str	r3, [r7, #4]
 172:.\Generated_Source\PSoC4/ADC_1.c ****     tmpRegVal &= (uint32)~ADC_1_DCEN;
 167              		.loc 1 172 0
 168 007c 7A68     		ldr	r2, [r7, #4]
 169 007e 534B     		ldr	r3, .L14+76
 170 0080 1340     		and	r3, r2
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 7


 171 0082 7B60     		str	r3, [r7, #4]
 173:.\Generated_Source\PSoC4/ADC_1.c ****     
 174:.\Generated_Source\PSoC4/ADC_1.c ****     #if(ADC_1_CY_SAR_IP_VER == ADC_1_CY_SAR_IP_PSOC4)
 175:.\Generated_Source\PSoC4/ADC_1.c ****         #if(ADC_1_NOMINAL_CLOCK_FREQ > (ADC_1_MAX_FREQUENCY / 2))
 176:.\Generated_Source\PSoC4/ADC_1.c ****             tmpRegVal |= ADC_1_SEL_CSEL_DFT_CHAR;
 177:.\Generated_Source\PSoC4/ADC_1.c ****         #else  /* clock speed < 9 Mhz */
 178:.\Generated_Source\PSoC4/ADC_1.c ****             tmpRegVal |= ADC_1_DLY_INC;
 172              		.loc 1 178 0
 173 0084 7B68     		ldr	r3, [r7, #4]
 174 0086 0122     		mov	r2, #1
 175 0088 1343     		orr	r3, r2
 176 008a 7B60     		str	r3, [r7, #4]
 179:.\Generated_Source\PSoC4/ADC_1.c ****         #endif /* clock speed > 9 Mhz */
 180:.\Generated_Source\PSoC4/ADC_1.c ****     #else
 181:.\Generated_Source\PSoC4/ADC_1.c ****         #if ((ADC_1_DEFAULT_VREF_SEL == ADC_1__INTERNAL1024) || \
 182:.\Generated_Source\PSoC4/ADC_1.c ****              (ADC_1_DEFAULT_VREF_SEL == ADC_1__INTERNALVREF))
 183:.\Generated_Source\PSoC4/ADC_1.c ****             tmpRegVal |= ADC_1_DLY_INC;
 184:.\Generated_Source\PSoC4/ADC_1.c ****         #else
 185:.\Generated_Source\PSoC4/ADC_1.c ****             tmpRegVal |= ADC_1_DCEN;
 186:.\Generated_Source\PSoC4/ADC_1.c ****             tmpRegVal &= (uint32)~ADC_1_DLY_INC;
 187:.\Generated_Source\PSoC4/ADC_1.c ****         #endif /* ((ADC_1_DEFAULT_VREF_SEL == ADC_1__INTERNAL1024) || \
 188:.\Generated_Source\PSoC4/ADC_1.c ****                    (ADC_1_DEFAULT_VREF_SEL == ADC_1__INTERNALVREF)) */
 189:.\Generated_Source\PSoC4/ADC_1.c ****     #endif /* (ADC_1_CY_SAR_IP_VER == ADC_1_CY_SAR_IP_PSOC4) */
 190:.\Generated_Source\PSoC4/ADC_1.c ****     
 191:.\Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_DFT_CTRL_REG = tmpRegVal;
 177              		.loc 1 191 0
 178 008c 4E4B     		ldr	r3, .L14+72
 179 008e 7A68     		ldr	r2, [r7, #4]
 180 0090 1A60     		str	r2, [r3]
 192:.\Generated_Source\PSoC4/ADC_1.c **** 
 193:.\Generated_Source\PSoC4/ADC_1.c ****     #if(ADC_1_MAX_RESOLUTION != ADC_1_RESOLUTION_12)
 194:.\Generated_Source\PSoC4/ADC_1.c ****         ADC_1_WOUNDING_REG = ADC_1_ALT_WOUNDING;
 195:.\Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_MAX_RESOLUTION != ADC_1_RESOLUTION_12 */
 196:.\Generated_Source\PSoC4/ADC_1.c **** 
 197:.\Generated_Source\PSoC4/ADC_1.c ****     for(chNum = 0u; chNum < ADC_1_TOTAL_CHANNELS_NUM; chNum++)
 181              		.loc 1 197 0
 182 0092 0023     		mov	r3, #0
 183 0094 FB60     		str	r3, [r7, #12]
 184 0096 6DE0     		b	.L6
 185              	.L13:
 198:.\Generated_Source\PSoC4/ADC_1.c ****     {
 199:.\Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal = (ADC_1_channelsConfig[chNum] & ADC_1_CHANNEL_CONFIG_MASK);
 186              		.loc 1 199 0
 187 0098 4D4B     		ldr	r3, .L14+80
 188 009a FA68     		ldr	r2, [r7, #12]
 189 009c 9200     		lsl	r2, r2, #2
 190 009e D258     		ldr	r2, [r2, r3]
 191 00a0 DC23     		mov	r3, #220
 192 00a2 9B01     		lsl	r3, r3, #6
 193 00a4 1340     		and	r3, r2
 194 00a6 7B60     		str	r3, [r7, #4]
 200:.\Generated_Source\PSoC4/ADC_1.c ****         #if(ADC_1_TOTAL_CHANNELS_NUM > 1u)
 201:.\Generated_Source\PSoC4/ADC_1.c ****             tmpRegVal |= ADC_1_InputsPlacement[chNum];
 195              		.loc 1 201 0
 196 00a8 4A4A     		ldr	r2, .L14+84
 197 00aa FB68     		ldr	r3, [r7, #12]
 198 00ac D318     		add	r3, r2, r3
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 8


 199 00ae 1B78     		ldrb	r3, [r3]
 200 00b0 7A68     		ldr	r2, [r7, #4]
 201 00b2 1343     		orr	r3, r2
 202 00b4 7B60     		str	r3, [r7, #4]
 202:.\Generated_Source\PSoC4/ADC_1.c ****         #endif /* End ADC_1_TOTAL_CHANNELS_NUM > 1u */
 203:.\Generated_Source\PSoC4/ADC_1.c ****         
 204:.\Generated_Source\PSoC4/ADC_1.c ****         
 205:.\Generated_Source\PSoC4/ADC_1.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 206:.\Generated_Source\PSoC4/ADC_1.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 207:.\Generated_Source\PSoC4/ADC_1.c ****         *  (0) and 8-bit (1) resolution.
 208:.\Generated_Source\PSoC4/ADC_1.c ****         */
 209:.\Generated_Source\PSoC4/ADC_1.c ****         #if((ADC_1_MAX_RESOLUTION != ADC_1_RESOLUTION_12) && \
 210:.\Generated_Source\PSoC4/ADC_1.c ****             (ADC_1_ALT_WOUNDING == ADC_1_WOUNDING_10BIT))
 211:.\Generated_Source\PSoC4/ADC_1.c ****             tmpRegVal &= (uint32)(~ADC_1_ALT_RESOLUTION_ON);
 212:.\Generated_Source\PSoC4/ADC_1.c ****         #endif /* ADC_1_MAX_RESOLUTION != ADC_1_RESOLUTION_12 */
 213:.\Generated_Source\PSoC4/ADC_1.c **** 
 214:.\Generated_Source\PSoC4/ADC_1.c ****         #if(ADC_1_INJ_CHANNEL_ENABLED)
 215:.\Generated_Source\PSoC4/ADC_1.c ****         if(chNum < ADC_1_SEQUENCED_CHANNELS_NUM)
 216:.\Generated_Source\PSoC4/ADC_1.c ****         #endif /* ADC_1_INJ_CHANNEL_ENABLED */
 217:.\Generated_Source\PSoC4/ADC_1.c ****         {
 218:.\Generated_Source\PSoC4/ADC_1.c ****             CY_SET_REG32((reg32 *)(ADC_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 203              		.loc 1 218 0
 204 00b6 FB68     		ldr	r3, [r7, #12]
 205 00b8 9B00     		lsl	r3, r3, #2
 206 00ba 474A     		ldr	r2, .L14+88
 207 00bc 9B18     		add	r3, r3, r2
 208 00be 7A68     		ldr	r2, [r7, #4]
 209 00c0 1A60     		str	r2, [r3]
 219:.\Generated_Source\PSoC4/ADC_1.c **** 
 220:.\Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_channelsConfig[chNum] & ADC_1_IS_SATURATE_EN_MASK) != 0u)
 210              		.loc 1 220 0
 211 00c2 434B     		ldr	r3, .L14+80
 212 00c4 FA68     		ldr	r2, [r7, #12]
 213 00c6 9200     		lsl	r2, r2, #2
 214 00c8 D258     		ldr	r2, [r2, r3]
 215 00ca 0123     		mov	r3, #1
 216 00cc 1340     		and	r3, r2
 217 00ce 0AD0     		beq	.L7
 221:.\Generated_Source\PSoC4/ADC_1.c ****             {
 222:.\Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 218              		.loc 1 222 0
 219 00d0 394B     		ldr	r3, .L14+56
 220 00d2 394A     		ldr	r2, .L14+56
 221 00d4 1168     		ldr	r1, [r2]
 222 00d6 FA68     		ldr	r2, [r7, #12]
 223 00d8 0120     		mov	r0, #1
 224 00da 041C     		mov	r4, r0
 225 00dc 9440     		lsl	r4, r4, r2
 226 00de 221C     		mov	r2, r4
 227 00e0 92B2     		uxth	r2, r2
 228 00e2 0A43     		orr	r2, r1
 229 00e4 1A60     		str	r2, [r3]
 230              	.L7:
 223:.\Generated_Source\PSoC4/ADC_1.c ****             }
 224:.\Generated_Source\PSoC4/ADC_1.c **** 
 225:.\Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_channelsConfig[chNum] & ADC_1_IS_RANGE_CTRL_EN_MASK) != 0u)
 231              		.loc 1 225 0
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 9


 232 00e6 3A4B     		ldr	r3, .L14+80
 233 00e8 FA68     		ldr	r2, [r7, #12]
 234 00ea 9200     		lsl	r2, r2, #2
 235 00ec D258     		ldr	r2, [r2, r3]
 236 00ee 0223     		mov	r3, #2
 237 00f0 1340     		and	r3, r2
 238 00f2 0AD0     		beq	.L8
 226:.\Generated_Source\PSoC4/ADC_1.c ****             {
 227:.\Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 239              		.loc 1 227 0
 240 00f4 314B     		ldr	r3, .L14+60
 241 00f6 314A     		ldr	r2, .L14+60
 242 00f8 1168     		ldr	r1, [r2]
 243 00fa FA68     		ldr	r2, [r7, #12]
 244 00fc 0120     		mov	r0, #1
 245 00fe 041C     		mov	r4, r0
 246 0100 9440     		lsl	r4, r4, r2
 247 0102 221C     		mov	r2, r4
 248 0104 92B2     		uxth	r2, r2
 249 0106 0A43     		orr	r2, r1
 250 0108 1A60     		str	r2, [r3]
 251              	.L8:
 228:.\Generated_Source\PSoC4/ADC_1.c ****             }
 229:.\Generated_Source\PSoC4/ADC_1.c ****         }
 230:.\Generated_Source\PSoC4/ADC_1.c ****         #if(ADC_1_INJ_CHANNEL_ENABLED)
 231:.\Generated_Source\PSoC4/ADC_1.c ****             else
 232:.\Generated_Source\PSoC4/ADC_1.c ****             {
 233:.\Generated_Source\PSoC4/ADC_1.c ****                 CY_SET_REG32(ADC_1_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_1_INJ_TAILGATING);
 234:.\Generated_Source\PSoC4/ADC_1.c **** 
 235:.\Generated_Source\PSoC4/ADC_1.c ****                 if((ADC_1_channelsConfig[chNum] & ADC_1_IS_SATURATE_EN_MASK) != 0u)
 236:.\Generated_Source\PSoC4/ADC_1.c ****                 {
 237:.\Generated_Source\PSoC4/ADC_1.c ****                     ADC_1_SAR_INTR_MASK_REG |= ADC_1_INJ_SATURATE_MASK;
 238:.\Generated_Source\PSoC4/ADC_1.c ****                 }
 239:.\Generated_Source\PSoC4/ADC_1.c **** 
 240:.\Generated_Source\PSoC4/ADC_1.c ****                 if((ADC_1_channelsConfig[chNum] & ADC_1_IS_RANGE_CTRL_EN_MASK) != 0u)
 241:.\Generated_Source\PSoC4/ADC_1.c ****                 {
 242:.\Generated_Source\PSoC4/ADC_1.c ****                     ADC_1_SAR_INTR_MASK_REG |= ADC_1_INJ_RANGE_MASK;
 243:.\Generated_Source\PSoC4/ADC_1.c ****                 }
 244:.\Generated_Source\PSoC4/ADC_1.c ****             }
 245:.\Generated_Source\PSoC4/ADC_1.c ****         #endif /* ADC_1_INJ_CHANNEL_ENABLED */
 246:.\Generated_Source\PSoC4/ADC_1.c **** 
 247:.\Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_channelsConfig[chNum] & ADC_1_ALT_RESOLUTION_ON) != 0u)
 252              		.loc 1 247 0
 253 010a 314B     		ldr	r3, .L14+80
 254 010c FA68     		ldr	r2, [r7, #12]
 255 010e 9200     		lsl	r2, r2, #2
 256 0110 D258     		ldr	r2, [r2, r3]
 257 0112 8023     		mov	r3, #128
 258 0114 9B00     		lsl	r3, r3, #2
 259 0116 1340     		and	r3, r2
 260 0118 03D0     		beq	.L9
 248:.\Generated_Source\PSoC4/ADC_1.c ****         {
 249:.\Generated_Source\PSoC4/ADC_1.c ****                counts = (int32)ADC_1_DEFAULT_MAX_WRK_ALT;
 261              		.loc 1 249 0
 262 011a 8023     		mov	r3, #128
 263 011c 5B00     		lsl	r3, r3, #1
 264 011e BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 10


 265 0120 02E0     		b	.L10
 266              	.L9:
 250:.\Generated_Source\PSoC4/ADC_1.c ****         }
 251:.\Generated_Source\PSoC4/ADC_1.c ****         else
 252:.\Generated_Source\PSoC4/ADC_1.c ****         {
 253:.\Generated_Source\PSoC4/ADC_1.c ****                counts = (int32)ADC_1_SAR_WRK_MAX_12BIT;
 267              		.loc 1 253 0
 268 0122 8023     		mov	r3, #128
 269 0124 5B01     		lsl	r3, r3, #5
 270 0126 BB60     		str	r3, [r7, #8]
 271              	.L10:
 254:.\Generated_Source\PSoC4/ADC_1.c ****         }
 255:.\Generated_Source\PSoC4/ADC_1.c **** 
 256:.\Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_channelsConfig[chNum] & ADC_1_DIFFERENTIAL_EN) == 0u)
 272              		.loc 1 256 0
 273 0128 294B     		ldr	r3, .L14+80
 274 012a FA68     		ldr	r2, [r7, #12]
 275 012c 9200     		lsl	r2, r2, #2
 276 012e D258     		ldr	r2, [r2, r3]
 277 0130 8023     		mov	r3, #128
 278 0132 5B00     		lsl	r3, r3, #1
 279 0134 1340     		and	r3, r2
 280 0136 05D1     		bne	.L11
 257:.\Generated_Source\PSoC4/ADC_1.c ****         {
 258:.\Generated_Source\PSoC4/ADC_1.c ****             #if((ADC_1_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_1__FSIGNED) && \
 259:.\Generated_Source\PSoC4/ADC_1.c ****                 (ADC_1_DEFAULT_NEG_INPUT_SEL == ADC_1__VREF))
 260:.\Generated_Source\PSoC4/ADC_1.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 261:.\Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_offset[chNum] = (int16)(counts / -2);
 262:.\Generated_Source\PSoC4/ADC_1.c ****             #else
 263:.\Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_offset[chNum] = 0;
 281              		.loc 1 263 0
 282 0138 284B     		ldr	r3, .L14+92
 283 013a FA68     		ldr	r2, [r7, #12]
 284 013c 5200     		lsl	r2, r2, #1
 285 013e 0021     		mov	r1, #0
 286 0140 D152     		strh	r1, [r2, r3]
 287 0142 04E0     		b	.L12
 288              	.L11:
 264:.\Generated_Source\PSoC4/ADC_1.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_1__FSIGNED */
 265:.\Generated_Source\PSoC4/ADC_1.c ****         }
 266:.\Generated_Source\PSoC4/ADC_1.c ****         else    /* Differential channel */
 267:.\Generated_Source\PSoC4/ADC_1.c ****         {
 268:.\Generated_Source\PSoC4/ADC_1.c ****             #if(ADC_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_1__FUNSIGNED)
 269:.\Generated_Source\PSoC4/ADC_1.c ****                 /* Set offset to the half scale to convert results to signed format */
 270:.\Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_offset[chNum] = (int16)(counts / 2);
 271:.\Generated_Source\PSoC4/ADC_1.c ****             #else
 272:.\Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_offset[chNum] = 0;
 289              		.loc 1 272 0
 290 0144 254B     		ldr	r3, .L14+92
 291 0146 FA68     		ldr	r2, [r7, #12]
 292 0148 5200     		lsl	r2, r2, #1
 293 014a 0021     		mov	r1, #0
 294 014c D152     		strh	r1, [r2, r3]
 295              	.L12:
 273:.\Generated_Source\PSoC4/ADC_1.c ****             #endif /* end ADC_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_1__FUNSIGNED */
 274:.\Generated_Source\PSoC4/ADC_1.c ****         }
 275:.\Generated_Source\PSoC4/ADC_1.c ****         /* Calculate gain in counts per 10 volts with rounding */
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 11


 276:.\Generated_Source\PSoC4/ADC_1.c ****         ADC_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_1_10MV_COUNTS) +
 296              		.loc 1 276 0
 297 014e BB68     		ldr	r3, [r7, #8]
 298 0150 234A     		ldr	r2, .L14+96
 299 0152 5343     		mul	r3, r2
 300 0154 234A     		ldr	r2, .L14+100
 301 0156 9B18     		add	r3, r3, r2
 277:.\Generated_Source\PSoC4/ADC_1.c ****                             ADC_1_DEFAULT_VREF_MV_VALUE) / (ADC_1_DEFAULT_VREF_MV_VALUE * 2));
 302              		.loc 1 277 0
 303 0158 181C     		mov	r0, r3
 304 015a 2349     		ldr	r1, .L14+104
 305 015c FFF7FEFF 		bl	__aeabi_idiv
 306 0160 031C     		mov	r3, r0
 276:.\Generated_Source\PSoC4/ADC_1.c ****         ADC_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_1_10MV_COUNTS) +
 307              		.loc 1 276 0
 308 0162 9BB2     		uxth	r3, r3
 309 0164 19B2     		sxth	r1, r3
 310 0166 214B     		ldr	r3, .L14+108
 311 0168 FA68     		ldr	r2, [r7, #12]
 312 016a 9200     		lsl	r2, r2, #2
 313 016c D150     		str	r1, [r2, r3]
 197:.\Generated_Source\PSoC4/ADC_1.c ****     for(chNum = 0u; chNum < ADC_1_TOTAL_CHANNELS_NUM; chNum++)
 314              		.loc 1 197 0
 315 016e FB68     		ldr	r3, [r7, #12]
 316 0170 0133     		add	r3, r3, #1
 317 0172 FB60     		str	r3, [r7, #12]
 318              	.L6:
 197:.\Generated_Source\PSoC4/ADC_1.c ****     for(chNum = 0u; chNum < ADC_1_TOTAL_CHANNELS_NUM; chNum++)
 319              		.loc 1 197 0 is_stmt 0 discriminator 1
 320 0174 FB68     		ldr	r3, [r7, #12]
 321 0176 012B     		cmp	r3, #1
 322 0178 8ED9     		bls	.L13
 278:.\Generated_Source\PSoC4/ADC_1.c ****     }
 279:.\Generated_Source\PSoC4/ADC_1.c **** }
 323              		.loc 1 279 0 is_stmt 1
 324 017a BD46     		mov	sp, r7
 325 017c 05B0     		add	sp, sp, #20
 326              		@ sp needed
 327 017e 90BD     		pop	{r4, r7, pc}
 328              	.L15:
 329              		.align	2
 330              	.L14:
 331 0180 00000000 		.word	ADC_1_ISR
 332 0184 20001A40 		.word	1075445792
 333 0188 00001A40 		.word	1075445760
 334 018c 70200010 		.word	268443760
 335 0190 04001A40 		.word	1075445764
 336 0194 8C000080 		.word	-2147483508
 337 0198 18001A40 		.word	1075445784
 338 019c 0000FF07 		.word	134152192
 339 01a0 1C001A40 		.word	1075445788
 340 01a4 10001A40 		.word	1075445776
 341 01a8 02000200 		.word	131074
 342 01ac 14001A40 		.word	1075445780
 343 01b0 00031A40 		.word	1075446528
 344 01b4 40031A40 		.word	1075446592
 345 01b8 28021A40 		.word	1075446312
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 12


 346 01bc 38021A40 		.word	1075446328
 347 01c0 18021A40 		.word	1075446296
 348 01c4 000F1A40 		.word	1075449600
 349 01c8 30001A40 		.word	1075445808
 350 01cc FFFFFFDF 		.word	-536870913
 351 01d0 00000000 		.word	ADC_1_channelsConfig
 352 01d4 08000000 		.word	ADC_1_InputsPlacement.4717
 353 01d8 80001A40 		.word	1075445888
 354 01dc 00000000 		.word	ADC_1_offset
 355 01e0 10270000 		.word	10000
 356 01e4 E40C0000 		.word	3300
 357 01e8 C8190000 		.word	6600
 358 01ec 00000000 		.word	ADC_1_countsPer10Volt
 359              		.cfi_endproc
 360              	.LFE1:
 361              		.size	ADC_1_Init, .-ADC_1_Init
 362              		.section	.text.ADC_1_Enable,"ax",%progbits
 363              		.align	2
 364              		.global	ADC_1_Enable
 365              		.code	16
 366              		.thumb_func
 367              		.type	ADC_1_Enable, %function
 368              	ADC_1_Enable:
 369              	.LFB2:
 280:.\Generated_Source\PSoC4/ADC_1.c **** 
 281:.\Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_SAR_1_Enable
 283:.\Generated_Source\PSoC4/ADC_1.c **** ********************************************************************************
 284:.\Generated_Source\PSoC4/ADC_1.c **** *
 285:.\Generated_Source\PSoC4/ADC_1.c **** * Summary:
 286:.\Generated_Source\PSoC4/ADC_1.c **** *  Enables the clock and analog power for SAR ADC.
 287:.\Generated_Source\PSoC4/ADC_1.c **** *
 288:.\Generated_Source\PSoC4/ADC_1.c **** * Parameters:
 289:.\Generated_Source\PSoC4/ADC_1.c **** *  None.
 290:.\Generated_Source\PSoC4/ADC_1.c **** *
 291:.\Generated_Source\PSoC4/ADC_1.c **** * Return:
 292:.\Generated_Source\PSoC4/ADC_1.c **** *  None.
 293:.\Generated_Source\PSoC4/ADC_1.c **** *
 294:.\Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Enable(void)
 296:.\Generated_Source\PSoC4/ADC_1.c **** {
 370              		.loc 1 296 0
 371              		.cfi_startproc
 372 0000 80B5     		push	{r7, lr}
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 7, -8
 375              		.cfi_offset 14, -4
 376 0002 00AF     		add	r7, sp, #0
 377              		.cfi_def_cfa_register 7
 297:.\Generated_Source\PSoC4/ADC_1.c ****     if (0u == (ADC_1_SAR_CTRL_REG & ADC_1_ENABLE))
 378              		.loc 1 297 0
 379 0004 074B     		ldr	r3, .L18
 380 0006 1B68     		ldr	r3, [r3]
 381 0008 002B     		cmp	r3, #0
 382 000a 09DB     		blt	.L16
 298:.\Generated_Source\PSoC4/ADC_1.c ****     {
 299:.\Generated_Source\PSoC4/ADC_1.c ****         #if(ADC_1_CY_SAR_IP_VER != ADC_1_CY_SAR_IP_PSOC4)
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 13


 300:.\Generated_Source\PSoC4/ADC_1.c **** 
 301:.\Generated_Source\PSoC4/ADC_1.c ****             while (0u != (ADC_1_SAR_STATUS_REG & ADC_1_STATUS_BUSY))
 302:.\Generated_Source\PSoC4/ADC_1.c ****             {
 303:.\Generated_Source\PSoC4/ADC_1.c ****                 /* wait for SAR to go idle for to avoid deadlock */
 304:.\Generated_Source\PSoC4/ADC_1.c ****             }
 305:.\Generated_Source\PSoC4/ADC_1.c ****         #endif /* (ADC_1_CY_SAR_IP_VER != ADC_1_CY_SAR_IP_PSOC4) */
 306:.\Generated_Source\PSoC4/ADC_1.c ****         
 307:.\Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_CTRL_REG |= ADC_1_ENABLE;
 383              		.loc 1 307 0
 384 000c 054B     		ldr	r3, .L18
 385 000e 054A     		ldr	r2, .L18
 386 0010 1268     		ldr	r2, [r2]
 387 0012 8021     		mov	r1, #128
 388 0014 0906     		lsl	r1, r1, #24
 389 0016 0A43     		orr	r2, r1
 390 0018 1A60     		str	r2, [r3]
 308:.\Generated_Source\PSoC4/ADC_1.c ****         
 309:.\Generated_Source\PSoC4/ADC_1.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 310:.\Generated_Source\PSoC4/ADC_1.c ****         CyDelayUs(ADC_1_10US_DELAY);         
 391              		.loc 1 310 0
 392 001a 0A20     		mov	r0, #10
 393 001c FFF7FEFF 		bl	CyDelayUs
 394              	.L16:
 311:.\Generated_Source\PSoC4/ADC_1.c ****     }
 312:.\Generated_Source\PSoC4/ADC_1.c **** }
 395              		.loc 1 312 0
 396 0020 BD46     		mov	sp, r7
 397              		@ sp needed
 398 0022 80BD     		pop	{r7, pc}
 399              	.L19:
 400              		.align	2
 401              	.L18:
 402 0024 00001A40 		.word	1075445760
 403              		.cfi_endproc
 404              	.LFE2:
 405              		.size	ADC_1_Enable, .-ADC_1_Enable
 406              		.section	.text.ADC_1_Stop,"ax",%progbits
 407              		.align	2
 408              		.global	ADC_1_Stop
 409              		.code	16
 410              		.thumb_func
 411              		.type	ADC_1_Stop, %function
 412              	ADC_1_Stop:
 413              	.LFB3:
 313:.\Generated_Source\PSoC4/ADC_1.c **** 
 314:.\Generated_Source\PSoC4/ADC_1.c **** 
 315:.\Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 316:.\Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Stop
 317:.\Generated_Source\PSoC4/ADC_1.c **** ********************************************************************************
 318:.\Generated_Source\PSoC4/ADC_1.c **** *
 319:.\Generated_Source\PSoC4/ADC_1.c **** * Summary:
 320:.\Generated_Source\PSoC4/ADC_1.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 321:.\Generated_Source\PSoC4/ADC_1.c **** *  mode.
 322:.\Generated_Source\PSoC4/ADC_1.c **** *
 323:.\Generated_Source\PSoC4/ADC_1.c **** * Parameters:
 324:.\Generated_Source\PSoC4/ADC_1.c **** *  None.
 325:.\Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 14


 326:.\Generated_Source\PSoC4/ADC_1.c **** * Return:
 327:.\Generated_Source\PSoC4/ADC_1.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC_1.c **** *
 329:.\Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Stop(void)
 331:.\Generated_Source\PSoC4/ADC_1.c **** {
 414              		.loc 1 331 0
 415              		.cfi_startproc
 416 0000 80B5     		push	{r7, lr}
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 7, -8
 419              		.cfi_offset 14, -4
 420 0002 00AF     		add	r7, sp, #0
 421              		.cfi_def_cfa_register 7
 332:.\Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CTRL_REG &= (uint32)~ADC_1_ENABLE;
 422              		.loc 1 332 0
 423 0004 034B     		ldr	r3, .L21
 424 0006 034A     		ldr	r2, .L21
 425 0008 1268     		ldr	r2, [r2]
 426 000a 5200     		lsl	r2, r2, #1
 427 000c 5208     		lsr	r2, r2, #1
 428 000e 1A60     		str	r2, [r3]
 333:.\Generated_Source\PSoC4/ADC_1.c **** }
 429              		.loc 1 333 0
 430 0010 BD46     		mov	sp, r7
 431              		@ sp needed
 432 0012 80BD     		pop	{r7, pc}
 433              	.L22:
 434              		.align	2
 435              	.L21:
 436 0014 00001A40 		.word	1075445760
 437              		.cfi_endproc
 438              	.LFE3:
 439              		.size	ADC_1_Stop, .-ADC_1_Stop
 440              		.section	.text.ADC_1_StartConvert,"ax",%progbits
 441              		.align	2
 442              		.global	ADC_1_StartConvert
 443              		.code	16
 444              		.thumb_func
 445              		.type	ADC_1_StartConvert, %function
 446              	ADC_1_StartConvert:
 447              	.LFB4:
 334:.\Generated_Source\PSoC4/ADC_1.c **** 
 335:.\Generated_Source\PSoC4/ADC_1.c **** 
 336:.\Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 337:.\Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_StartConvert
 338:.\Generated_Source\PSoC4/ADC_1.c **** ********************************************************************************
 339:.\Generated_Source\PSoC4/ADC_1.c **** *
 340:.\Generated_Source\PSoC4/ADC_1.c **** * Summary:
 341:.\Generated_Source\PSoC4/ADC_1.c **** *  Description:
 342:.\Generated_Source\PSoC4/ADC_1.c **** *  For free running mode, this API starts the conversion process and it
 343:.\Generated_Source\PSoC4/ADC_1.c **** *  runs continuously.
 344:.\Generated_Source\PSoC4/ADC_1.c **** *
 345:.\Generated_Source\PSoC4/ADC_1.c **** *  In a triggered mode, this routine triggers every conversion by
 346:.\Generated_Source\PSoC4/ADC_1.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 347:.\Generated_Source\PSoC4/ADC_1.c **** *  every conversion has to start by this API.
 348:.\Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 15


 349:.\Generated_Source\PSoC4/ADC_1.c **** * Parameters:
 350:.\Generated_Source\PSoC4/ADC_1.c **** *  None.
 351:.\Generated_Source\PSoC4/ADC_1.c **** *
 352:.\Generated_Source\PSoC4/ADC_1.c **** * Return:
 353:.\Generated_Source\PSoC4/ADC_1.c **** *  None.
 354:.\Generated_Source\PSoC4/ADC_1.c **** *
 355:.\Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 356:.\Generated_Source\PSoC4/ADC_1.c **** void ADC_1_StartConvert(void)
 357:.\Generated_Source\PSoC4/ADC_1.c **** {
 448              		.loc 1 357 0
 449              		.cfi_startproc
 450 0000 80B5     		push	{r7, lr}
 451              		.cfi_def_cfa_offset 8
 452              		.cfi_offset 7, -8
 453              		.cfi_offset 14, -4
 454 0002 00AF     		add	r7, sp, #0
 455              		.cfi_def_cfa_register 7
 358:.\Generated_Source\PSoC4/ADC_1.c ****     #if(ADC_1_DEFAULT_SAMPLE_MODE_SEL == ADC_1__FREERUNNING)
 359:.\Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SAMPLE_CTRL_REG |= ADC_1_CONTINUOUS_EN;
 456              		.loc 1 359 0
 457 0004 044B     		ldr	r3, .L24
 458 0006 044A     		ldr	r2, .L24
 459 0008 1268     		ldr	r2, [r2]
 460 000a 8021     		mov	r1, #128
 461 000c 4902     		lsl	r1, r1, #9
 462 000e 0A43     		orr	r2, r1
 463 0010 1A60     		str	r2, [r3]
 360:.\Generated_Source\PSoC4/ADC_1.c ****     #else /* Firmware trigger */
 361:.\Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_START_CTRL_REG = ADC_1_FW_TRIGGER;
 362:.\Generated_Source\PSoC4/ADC_1.c ****     #endif /* End ADC_1_DEFAULT_SAMPLE_MODE == ADC_1__FREERUNNING */
 363:.\Generated_Source\PSoC4/ADC_1.c **** 
 364:.\Generated_Source\PSoC4/ADC_1.c **** }
 464              		.loc 1 364 0
 465 0012 BD46     		mov	sp, r7
 466              		@ sp needed
 467 0014 80BD     		pop	{r7, pc}
 468              	.L25:
 469 0016 C046     		.align	2
 470              	.L24:
 471 0018 04001A40 		.word	1075445764
 472              		.cfi_endproc
 473              	.LFE4:
 474              		.size	ADC_1_StartConvert, .-ADC_1_StartConvert
 475              		.section	.text.ADC_1_StopConvert,"ax",%progbits
 476              		.align	2
 477              		.global	ADC_1_StopConvert
 478              		.code	16
 479              		.thumb_func
 480              		.type	ADC_1_StopConvert, %function
 481              	ADC_1_StopConvert:
 482              	.LFB5:
 365:.\Generated_Source\PSoC4/ADC_1.c **** 
 366:.\Generated_Source\PSoC4/ADC_1.c **** 
 367:.\Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 368:.\Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_StopConvert
 369:.\Generated_Source\PSoC4/ADC_1.c **** ********************************************************************************
 370:.\Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 16


 371:.\Generated_Source\PSoC4/ADC_1.c **** * Summary:
 372:.\Generated_Source\PSoC4/ADC_1.c **** *  Forces the ADC to stop all conversions.
 373:.\Generated_Source\PSoC4/ADC_1.c **** *
 374:.\Generated_Source\PSoC4/ADC_1.c **** * Parameters:
 375:.\Generated_Source\PSoC4/ADC_1.c **** *  None.
 376:.\Generated_Source\PSoC4/ADC_1.c **** *
 377:.\Generated_Source\PSoC4/ADC_1.c **** * Return:
 378:.\Generated_Source\PSoC4/ADC_1.c **** *  None.
 379:.\Generated_Source\PSoC4/ADC_1.c **** *
 380:.\Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 381:.\Generated_Source\PSoC4/ADC_1.c **** void ADC_1_StopConvert(void)
 382:.\Generated_Source\PSoC4/ADC_1.c **** {
 483              		.loc 1 382 0
 484              		.cfi_startproc
 485 0000 80B5     		push	{r7, lr}
 486              		.cfi_def_cfa_offset 8
 487              		.cfi_offset 7, -8
 488              		.cfi_offset 14, -4
 489 0002 00AF     		add	r7, sp, #0
 490              		.cfi_def_cfa_register 7
 383:.\Generated_Source\PSoC4/ADC_1.c ****     #if(ADC_1_DEFAULT_SAMPLE_MODE_SEL == ADC_1__FREERUNNING)
 384:.\Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_1_CONTINUOUS_EN);
 491              		.loc 1 384 0
 492 0004 034B     		ldr	r3, .L27
 493 0006 034A     		ldr	r2, .L27
 494 0008 1168     		ldr	r1, [r2]
 495 000a 034A     		ldr	r2, .L27+4
 496 000c 0A40     		and	r2, r1
 497 000e 1A60     		str	r2, [r3]
 385:.\Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_DEFAULT_SAMPLE_MODE == ADC_1__FREERUNNING */
 386:.\Generated_Source\PSoC4/ADC_1.c **** }
 498              		.loc 1 386 0
 499 0010 BD46     		mov	sp, r7
 500              		@ sp needed
 501 0012 80BD     		pop	{r7, pc}
 502              	.L28:
 503              		.align	2
 504              	.L27:
 505 0014 04001A40 		.word	1075445764
 506 0018 FFFFFEFF 		.word	-65537
 507              		.cfi_endproc
 508              	.LFE5:
 509              		.size	ADC_1_StopConvert, .-ADC_1_StopConvert
 510              		.section	.text.ADC_1_IsEndConversion,"ax",%progbits
 511              		.align	2
 512              		.global	ADC_1_IsEndConversion
 513              		.code	16
 514              		.thumb_func
 515              		.type	ADC_1_IsEndConversion, %function
 516              	ADC_1_IsEndConversion:
 517              	.LFB6:
 387:.\Generated_Source\PSoC4/ADC_1.c **** 
 388:.\Generated_Source\PSoC4/ADC_1.c **** 
 389:.\Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 390:.\Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_IsEndConversion
 391:.\Generated_Source\PSoC4/ADC_1.c **** ********************************************************************************
 392:.\Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 17


 393:.\Generated_Source\PSoC4/ADC_1.c **** * Summary:
 394:.\Generated_Source\PSoC4/ADC_1.c **** *  Description: Checks for ADC end of conversion for the case one
 395:.\Generated_Source\PSoC4/ADC_1.c **** *  channel and end of scan for the case of multiple channels. It acts
 396:.\Generated_Source\PSoC4/ADC_1.c **** *  as a software version of the EOC. This function provides the
 397:.\Generated_Source\PSoC4/ADC_1.c **** *  programmer with two options. In one mode this function
 398:.\Generated_Source\PSoC4/ADC_1.c **** *  immediately returns with the conversion status. In the other mode,
 399:.\Generated_Source\PSoC4/ADC_1.c **** *  the function does not return (blocking) until the conversion has
 400:.\Generated_Source\PSoC4/ADC_1.c **** *  completed.
 401:.\Generated_Source\PSoC4/ADC_1.c **** *
 402:.\Generated_Source\PSoC4/ADC_1.c **** * Parameters:
 403:.\Generated_Source\PSoC4/ADC_1.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 404:.\Generated_Source\PSoC4/ADC_1.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 405:.\Generated_Source\PSoC4/ADC_1.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 406:.\Generated_Source\PSoC4/ADC_1.c **** *                              for injection channel
 407:.\Generated_Source\PSoC4/ADC_1.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 408:.\Generated_Source\PSoC4/ADC_1.c **** *                              channel conversion
 409:.\Generated_Source\PSoC4/ADC_1.c **** *
 410:.\Generated_Source\PSoC4/ADC_1.c **** * Return:
 411:.\Generated_Source\PSoC4/ADC_1.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 412:.\Generated_Source\PSoC4/ADC_1.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 413:.\Generated_Source\PSoC4/ADC_1.c **** *
 414:.\Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 415:.\Generated_Source\PSoC4/ADC_1.c **** uint32 ADC_1_IsEndConversion(uint32 retMode)
 416:.\Generated_Source\PSoC4/ADC_1.c **** {
 518              		.loc 1 416 0
 519              		.cfi_startproc
 520 0000 80B5     		push	{r7, lr}
 521              		.cfi_def_cfa_offset 8
 522              		.cfi_offset 7, -8
 523              		.cfi_offset 14, -4
 524 0002 84B0     		sub	sp, sp, #16
 525              		.cfi_def_cfa_offset 24
 526 0004 00AF     		add	r7, sp, #0
 527              		.cfi_def_cfa_register 7
 528 0006 7860     		str	r0, [r7, #4]
 417:.\Generated_Source\PSoC4/ADC_1.c ****     uint32 status = 0u;
 529              		.loc 1 417 0
 530 0008 0023     		mov	r3, #0
 531 000a FB60     		str	r3, [r7, #12]
 418:.\Generated_Source\PSoC4/ADC_1.c **** 
 419:.\Generated_Source\PSoC4/ADC_1.c ****     if((retMode & (ADC_1_RETURN_STATUS | ADC_1_WAIT_FOR_RESULT)) != 0u)
 532              		.loc 1 419 0
 533 000c 7A68     		ldr	r2, [r7, #4]
 534 000e 0323     		mov	r3, #3
 535 0010 1340     		and	r3, r2
 536 0012 11D0     		beq	.L30
 537              	.L32:
 420:.\Generated_Source\PSoC4/ADC_1.c ****     {
 421:.\Generated_Source\PSoC4/ADC_1.c ****         do
 422:.\Generated_Source\PSoC4/ADC_1.c ****         {
 423:.\Generated_Source\PSoC4/ADC_1.c ****             status = ADC_1_SAR_INTR_REG & ADC_1_EOS_MASK;
 538              		.loc 1 423 0 discriminator 1
 539 0014 0B4B     		ldr	r3, .L34
 540 0016 1A68     		ldr	r2, [r3]
 541 0018 0123     		mov	r3, #1
 542 001a 1340     		and	r3, r2
 543 001c FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 18


 424:.\Generated_Source\PSoC4/ADC_1.c ****         }while((status == 0u) && ((retMode & ADC_1_WAIT_FOR_RESULT) != 0u));
 544              		.loc 1 424 0 discriminator 1
 545 001e FB68     		ldr	r3, [r7, #12]
 546 0020 002B     		cmp	r3, #0
 547 0022 03D1     		bne	.L31
 548 0024 7A68     		ldr	r2, [r7, #4]
 549 0026 0223     		mov	r3, #2
 550 0028 1340     		and	r3, r2
 551 002a F3D1     		bne	.L32
 552              	.L31:
 425:.\Generated_Source\PSoC4/ADC_1.c **** 
 426:.\Generated_Source\PSoC4/ADC_1.c ****         if(status != 0u)
 553              		.loc 1 426 0
 554 002c FB68     		ldr	r3, [r7, #12]
 555 002e 002B     		cmp	r3, #0
 556 0030 02D0     		beq	.L30
 427:.\Generated_Source\PSoC4/ADC_1.c ****         {
 428:.\Generated_Source\PSoC4/ADC_1.c ****             /* Clear EOS bit */
 429:.\Generated_Source\PSoC4/ADC_1.c ****             ADC_1_SAR_INTR_REG = ADC_1_EOS_MASK;
 557              		.loc 1 429 0
 558 0032 044B     		ldr	r3, .L34
 559 0034 0122     		mov	r2, #1
 560 0036 1A60     		str	r2, [r3]
 561              	.L30:
 430:.\Generated_Source\PSoC4/ADC_1.c ****         }
 431:.\Generated_Source\PSoC4/ADC_1.c ****     }
 432:.\Generated_Source\PSoC4/ADC_1.c **** 
 433:.\Generated_Source\PSoC4/ADC_1.c ****     #if(ADC_1_INJ_CHANNEL_ENABLED)
 434:.\Generated_Source\PSoC4/ADC_1.c ****         if((retMode & (ADC_1_RETURN_STATUS_INJ | ADC_1_WAIT_FOR_RESULT_INJ)) != 0u)
 435:.\Generated_Source\PSoC4/ADC_1.c ****         {
 436:.\Generated_Source\PSoC4/ADC_1.c ****             do
 437:.\Generated_Source\PSoC4/ADC_1.c ****             {
 438:.\Generated_Source\PSoC4/ADC_1.c ****                 status |= ADC_1_SAR_INTR_REG & ADC_1_INJ_EOC_MASK;
 439:.\Generated_Source\PSoC4/ADC_1.c ****             }while(((status & ADC_1_INJ_EOC_MASK) == 0u) &&
 440:.\Generated_Source\PSoC4/ADC_1.c ****                    ((retMode & ADC_1_WAIT_FOR_RESULT_INJ) != 0u));
 441:.\Generated_Source\PSoC4/ADC_1.c **** 
 442:.\Generated_Source\PSoC4/ADC_1.c ****             if((status & ADC_1_INJ_EOC_MASK) != 0u)
 443:.\Generated_Source\PSoC4/ADC_1.c ****             {
 444:.\Generated_Source\PSoC4/ADC_1.c ****                 /* Clear Injection EOS bit */
 445:.\Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_SAR_INTR_REG = ADC_1_INJ_EOC_MASK;
 446:.\Generated_Source\PSoC4/ADC_1.c ****             }
 447:.\Generated_Source\PSoC4/ADC_1.c ****         }
 448:.\Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_INJ_CHANNEL_ENABLED */
 449:.\Generated_Source\PSoC4/ADC_1.c **** 
 450:.\Generated_Source\PSoC4/ADC_1.c ****     return (status);
 562              		.loc 1 450 0
 563 0038 FB68     		ldr	r3, [r7, #12]
 451:.\Generated_Source\PSoC4/ADC_1.c **** }
 564              		.loc 1 451 0
 565 003a 181C     		mov	r0, r3
 566 003c BD46     		mov	sp, r7
 567 003e 04B0     		add	sp, sp, #16
 568              		@ sp needed
 569 0040 80BD     		pop	{r7, pc}
 570              	.L35:
 571 0042 C046     		.align	2
 572              	.L34:
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 19


 573 0044 10021A40 		.word	1075446288
 574              		.cfi_endproc
 575              	.LFE6:
 576              		.size	ADC_1_IsEndConversion, .-ADC_1_IsEndConversion
 577              		.section	.text.ADC_1_GetResult16,"ax",%progbits
 578              		.align	2
 579              		.global	ADC_1_GetResult16
 580              		.code	16
 581              		.thumb_func
 582              		.type	ADC_1_GetResult16, %function
 583              	ADC_1_GetResult16:
 584              	.LFB7:
 452:.\Generated_Source\PSoC4/ADC_1.c **** 
 453:.\Generated_Source\PSoC4/ADC_1.c **** 
 454:.\Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 455:.\Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_GetResult16
 456:.\Generated_Source\PSoC4/ADC_1.c **** ********************************************************************************
 457:.\Generated_Source\PSoC4/ADC_1.c **** *
 458:.\Generated_Source\PSoC4/ADC_1.c **** * Summary:
 459:.\Generated_Source\PSoC4/ADC_1.c **** *  Gets the data available in the SAR DATA register.
 460:.\Generated_Source\PSoC4/ADC_1.c **** *
 461:.\Generated_Source\PSoC4/ADC_1.c **** * Parameters:
 462:.\Generated_Source\PSoC4/ADC_1.c **** *  chan: The ADC channel in which to return the result. The first channel
 463:.\Generated_Source\PSoC4/ADC_1.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 464:.\Generated_Source\PSoC4/ADC_1.c **** *
 465:.\Generated_Source\PSoC4/ADC_1.c **** * Return:
 466:.\Generated_Source\PSoC4/ADC_1.c **** *  Returns converted data as a signed 16-bit integer
 467:.\Generated_Source\PSoC4/ADC_1.c **** *
 468:.\Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 469:.\Generated_Source\PSoC4/ADC_1.c **** int16 ADC_1_GetResult16(uint32 chan)
 470:.\Generated_Source\PSoC4/ADC_1.c **** {
 585              		.loc 1 470 0
 586              		.cfi_startproc
 587 0000 80B5     		push	{r7, lr}
 588              		.cfi_def_cfa_offset 8
 589              		.cfi_offset 7, -8
 590              		.cfi_offset 14, -4
 591 0002 84B0     		sub	sp, sp, #16
 592              		.cfi_def_cfa_offset 24
 593 0004 00AF     		add	r7, sp, #0
 594              		.cfi_def_cfa_register 7
 595 0006 7860     		str	r0, [r7, #4]
 471:.\Generated_Source\PSoC4/ADC_1.c ****     uint32 result;
 472:.\Generated_Source\PSoC4/ADC_1.c **** 
 473:.\Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 474:.\Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_TOTAL_CHANNELS_NUM);
 596              		.loc 1 474 0
 597 0008 7B68     		ldr	r3, [r7, #4]
 598 000a 012B     		cmp	r3, #1
 599 000c 02D9     		bls	.L37
 600              		.loc 1 474 0 is_stmt 0 discriminator 1
 601 000e 0020     		mov	r0, #0
 602 0010 FFF7FEFF 		bl	CyHalt
 603              	.L37:
 475:.\Generated_Source\PSoC4/ADC_1.c **** 
 476:.\Generated_Source\PSoC4/ADC_1.c ****     if(chan < ADC_1_SEQUENCED_CHANNELS_NUM)
 604              		.loc 1 476 0 is_stmt 1
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 20


 605 0014 7B68     		ldr	r3, [r7, #4]
 606 0016 012B     		cmp	r3, #1
 607 0018 08D8     		bhi	.L38
 477:.\Generated_Source\PSoC4/ADC_1.c ****     {
 478:.\Generated_Source\PSoC4/ADC_1.c ****         result = CY_GET_REG32((reg32 *)(ADC_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 608              		.loc 1 478 0
 609 001a 7B68     		ldr	r3, [r7, #4]
 610 001c 9B00     		lsl	r3, r3, #2
 611 001e 084A     		ldr	r2, .L41
 612 0020 9B18     		add	r3, r3, r2
 613 0022 1B68     		ldr	r3, [r3]
 614 0024 1B04     		lsl	r3, r3, #16
 615 0026 1B0C     		lsr	r3, r3, #16
 616 0028 FB60     		str	r3, [r7, #12]
 617 002a 01E0     		b	.L39
 618              	.L38:
 479:.\Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_RESULT_MASK;
 480:.\Generated_Source\PSoC4/ADC_1.c ****     }
 481:.\Generated_Source\PSoC4/ADC_1.c ****     else
 482:.\Generated_Source\PSoC4/ADC_1.c ****     {
 483:.\Generated_Source\PSoC4/ADC_1.c ****         #if(ADC_1_INJ_CHANNEL_ENABLED)
 484:.\Generated_Source\PSoC4/ADC_1.c ****             result = ADC_1_SAR_INJ_RESULT_REG & ADC_1_RESULT_MASK;
 485:.\Generated_Source\PSoC4/ADC_1.c ****         #else
 486:.\Generated_Source\PSoC4/ADC_1.c ****             result = 0u;
 619              		.loc 1 486 0
 620 002c 0023     		mov	r3, #0
 621 002e FB60     		str	r3, [r7, #12]
 622              	.L39:
 487:.\Generated_Source\PSoC4/ADC_1.c ****         #endif /* ADC_1_INJ_CHANNEL_ENABLED */
 488:.\Generated_Source\PSoC4/ADC_1.c ****     }
 489:.\Generated_Source\PSoC4/ADC_1.c **** 
 490:.\Generated_Source\PSoC4/ADC_1.c ****     return ( (int16)result );
 623              		.loc 1 490 0
 624 0030 FB68     		ldr	r3, [r7, #12]
 625 0032 9BB2     		uxth	r3, r3
 626 0034 1BB2     		sxth	r3, r3
 491:.\Generated_Source\PSoC4/ADC_1.c **** }
 627              		.loc 1 491 0
 628 0036 181C     		mov	r0, r3
 629 0038 BD46     		mov	sp, r7
 630 003a 04B0     		add	sp, sp, #16
 631              		@ sp needed
 632 003c 80BD     		pop	{r7, pc}
 633              	.L42:
 634 003e C046     		.align	2
 635              	.L41:
 636 0040 80011A40 		.word	1075446144
 637              		.cfi_endproc
 638              	.LFE7:
 639              		.size	ADC_1_GetResult16, .-ADC_1_GetResult16
 640              		.section	.text.ADC_1_SetChanMask,"ax",%progbits
 641              		.align	2
 642              		.global	ADC_1_SetChanMask
 643              		.code	16
 644              		.thumb_func
 645              		.type	ADC_1_SetChanMask, %function
 646              	ADC_1_SetChanMask:
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 21


 647              	.LFB8:
 492:.\Generated_Source\PSoC4/ADC_1.c **** 
 493:.\Generated_Source\PSoC4/ADC_1.c **** 
 494:.\Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 495:.\Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetChanMask
 496:.\Generated_Source\PSoC4/ADC_1.c **** ********************************************************************************
 497:.\Generated_Source\PSoC4/ADC_1.c **** *
 498:.\Generated_Source\PSoC4/ADC_1.c **** * Summary:
 499:.\Generated_Source\PSoC4/ADC_1.c **** *  Sets the channel enable mask.
 500:.\Generated_Source\PSoC4/ADC_1.c **** *
 501:.\Generated_Source\PSoC4/ADC_1.c **** * Parameters:
 502:.\Generated_Source\PSoC4/ADC_1.c **** *  mask: Sets which channels that will be
 503:.\Generated_Source\PSoC4/ADC_1.c **** *  scanned. Setting bits for channels that do not exist will have no
 504:.\Generated_Source\PSoC4/ADC_1.c **** *  effect. For example, if only 6 channels were enabled, setting a
 505:.\Generated_Source\PSoC4/ADC_1.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 506:.\Generated_Source\PSoC4/ADC_1.c **** *  This API will not enable the injection channel.
 507:.\Generated_Source\PSoC4/ADC_1.c **** *  Examples: If the component is setup to sequence through 8
 508:.\Generated_Source\PSoC4/ADC_1.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 509:.\Generated_Source\PSoC4/ADC_1.c **** *
 510:.\Generated_Source\PSoC4/ADC_1.c **** * Return:
 511:.\Generated_Source\PSoC4/ADC_1.c **** *  None.
 512:.\Generated_Source\PSoC4/ADC_1.c **** *
 513:.\Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 514:.\Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetChanMask(uint32 mask)
 515:.\Generated_Source\PSoC4/ADC_1.c **** {
 648              		.loc 1 515 0
 649              		.cfi_startproc
 650 0000 80B5     		push	{r7, lr}
 651              		.cfi_def_cfa_offset 8
 652              		.cfi_offset 7, -8
 653              		.cfi_offset 14, -4
 654 0002 82B0     		sub	sp, sp, #8
 655              		.cfi_def_cfa_offset 16
 656 0004 00AF     		add	r7, sp, #0
 657              		.cfi_def_cfa_register 7
 658 0006 7860     		str	r0, [r7, #4]
 516:.\Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CHAN_EN_REG = mask & ADC_1_MAX_CHANNELS_EN_MASK;
 659              		.loc 1 516 0
 660 0008 034B     		ldr	r3, .L44
 661 000a 7968     		ldr	r1, [r7, #4]
 662 000c 0322     		mov	r2, #3
 663 000e 0A40     		and	r2, r1
 664 0010 1A60     		str	r2, [r3]
 517:.\Generated_Source\PSoC4/ADC_1.c **** }
 665              		.loc 1 517 0
 666 0012 BD46     		mov	sp, r7
 667 0014 02B0     		add	sp, sp, #8
 668              		@ sp needed
 669 0016 80BD     		pop	{r7, pc}
 670              	.L45:
 671              		.align	2
 672              	.L44:
 673 0018 20001A40 		.word	1075445792
 674              		.cfi_endproc
 675              	.LFE8:
 676              		.size	ADC_1_SetChanMask, .-ADC_1_SetChanMask
 677              		.section	.text.ADC_1_SetLowLimit,"ax",%progbits
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 22


 678              		.align	2
 679              		.global	ADC_1_SetLowLimit
 680              		.code	16
 681              		.thumb_func
 682              		.type	ADC_1_SetLowLimit, %function
 683              	ADC_1_SetLowLimit:
 684              	.LFB9:
 518:.\Generated_Source\PSoC4/ADC_1.c **** 
 519:.\Generated_Source\PSoC4/ADC_1.c **** #if(ADC_1_INJ_CHANNEL_ENABLED)
 520:.\Generated_Source\PSoC4/ADC_1.c **** 
 521:.\Generated_Source\PSoC4/ADC_1.c **** 
 522:.\Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
 523:.\Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_EnableInjection
 524:.\Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
 525:.\Generated_Source\PSoC4/ADC_1.c ****     *
 526:.\Generated_Source\PSoC4/ADC_1.c ****     * Summary:
 527:.\Generated_Source\PSoC4/ADC_1.c ****     *  Enables the injection channel for the next scan only.
 528:.\Generated_Source\PSoC4/ADC_1.c ****     *
 529:.\Generated_Source\PSoC4/ADC_1.c ****     * Parameters:
 530:.\Generated_Source\PSoC4/ADC_1.c ****     *  None.
 531:.\Generated_Source\PSoC4/ADC_1.c ****     *
 532:.\Generated_Source\PSoC4/ADC_1.c ****     * Return:
 533:.\Generated_Source\PSoC4/ADC_1.c ****     *  None.
 534:.\Generated_Source\PSoC4/ADC_1.c ****     *
 535:.\Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
 536:.\Generated_Source\PSoC4/ADC_1.c ****     void ADC_1_EnableInjection(void)
 537:.\Generated_Source\PSoC4/ADC_1.c ****     {
 538:.\Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_INJ_CHAN_CONFIG_REG |= ADC_1_INJ_CHAN_EN;
 539:.\Generated_Source\PSoC4/ADC_1.c ****     }
 540:.\Generated_Source\PSoC4/ADC_1.c **** 
 541:.\Generated_Source\PSoC4/ADC_1.c **** #endif /* ADC_1_INJ_CHANNEL_ENABLED */
 542:.\Generated_Source\PSoC4/ADC_1.c **** 
 543:.\Generated_Source\PSoC4/ADC_1.c **** 
 544:.\Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 545:.\Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetLowLimit
 546:.\Generated_Source\PSoC4/ADC_1.c **** ********************************************************************************
 547:.\Generated_Source\PSoC4/ADC_1.c **** *
 548:.\Generated_Source\PSoC4/ADC_1.c **** * Summary:
 549:.\Generated_Source\PSoC4/ADC_1.c **** *  Sets the low limit parameter for a limit condition.
 550:.\Generated_Source\PSoC4/ADC_1.c **** *
 551:.\Generated_Source\PSoC4/ADC_1.c **** * Parameters:
 552:.\Generated_Source\PSoC4/ADC_1.c **** *  lowLimit: The low limit for a limit condition.
 553:.\Generated_Source\PSoC4/ADC_1.c **** *
 554:.\Generated_Source\PSoC4/ADC_1.c **** * Return:
 555:.\Generated_Source\PSoC4/ADC_1.c **** *  None.
 556:.\Generated_Source\PSoC4/ADC_1.c **** *
 557:.\Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 558:.\Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetLowLimit(uint32 lowLimit)
 559:.\Generated_Source\PSoC4/ADC_1.c **** {
 685              		.loc 1 559 0
 686              		.cfi_startproc
 687 0000 80B5     		push	{r7, lr}
 688              		.cfi_def_cfa_offset 8
 689              		.cfi_offset 7, -8
 690              		.cfi_offset 14, -4
 691 0002 82B0     		sub	sp, sp, #8
 692              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 23


 693 0004 00AF     		add	r7, sp, #0
 694              		.cfi_def_cfa_register 7
 695 0006 7860     		str	r0, [r7, #4]
 560:.\Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_1_RANGE_LOW_MASK);
 696              		.loc 1 560 0
 697 0008 084B     		ldr	r3, .L47
 698 000a 084A     		ldr	r2, .L47
 699 000c 1268     		ldr	r2, [r2]
 700 000e 120C     		lsr	r2, r2, #16
 701 0010 1204     		lsl	r2, r2, #16
 702 0012 1A60     		str	r2, [r3]
 561:.\Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_1_RANGE_LOW_MASK;
 703              		.loc 1 561 0
 704 0014 054B     		ldr	r3, .L47
 705 0016 054A     		ldr	r2, .L47
 706 0018 1168     		ldr	r1, [r2]
 707 001a 7A68     		ldr	r2, [r7, #4]
 708 001c 1204     		lsl	r2, r2, #16
 709 001e 120C     		lsr	r2, r2, #16
 710 0020 0A43     		orr	r2, r1
 711 0022 1A60     		str	r2, [r3]
 562:.\Generated_Source\PSoC4/ADC_1.c **** }
 712              		.loc 1 562 0
 713 0024 BD46     		mov	sp, r7
 714 0026 02B0     		add	sp, sp, #8
 715              		@ sp needed
 716 0028 80BD     		pop	{r7, pc}
 717              	.L48:
 718 002a C046     		.align	2
 719              	.L47:
 720 002c 18001A40 		.word	1075445784
 721              		.cfi_endproc
 722              	.LFE9:
 723              		.size	ADC_1_SetLowLimit, .-ADC_1_SetLowLimit
 724              		.section	.text.ADC_1_SetHighLimit,"ax",%progbits
 725              		.align	2
 726              		.global	ADC_1_SetHighLimit
 727              		.code	16
 728              		.thumb_func
 729              		.type	ADC_1_SetHighLimit, %function
 730              	ADC_1_SetHighLimit:
 731              	.LFB10:
 563:.\Generated_Source\PSoC4/ADC_1.c **** 
 564:.\Generated_Source\PSoC4/ADC_1.c **** 
 565:.\Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 566:.\Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetHighLimit
 567:.\Generated_Source\PSoC4/ADC_1.c **** ********************************************************************************
 568:.\Generated_Source\PSoC4/ADC_1.c **** *
 569:.\Generated_Source\PSoC4/ADC_1.c **** * Summary:
 570:.\Generated_Source\PSoC4/ADC_1.c **** *  Sets the low limit parameter for a limit condition.
 571:.\Generated_Source\PSoC4/ADC_1.c **** *
 572:.\Generated_Source\PSoC4/ADC_1.c **** * Parameters:
 573:.\Generated_Source\PSoC4/ADC_1.c **** *  highLimit: The high limit for a limit condition.
 574:.\Generated_Source\PSoC4/ADC_1.c **** *
 575:.\Generated_Source\PSoC4/ADC_1.c **** * Return:
 576:.\Generated_Source\PSoC4/ADC_1.c **** *  None.
 577:.\Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 24


 578:.\Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 579:.\Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetHighLimit(uint32 highLimit)
 580:.\Generated_Source\PSoC4/ADC_1.c **** {
 732              		.loc 1 580 0
 733              		.cfi_startproc
 734 0000 80B5     		push	{r7, lr}
 735              		.cfi_def_cfa_offset 8
 736              		.cfi_offset 7, -8
 737              		.cfi_offset 14, -4
 738 0002 82B0     		sub	sp, sp, #8
 739              		.cfi_def_cfa_offset 16
 740 0004 00AF     		add	r7, sp, #0
 741              		.cfi_def_cfa_register 7
 742 0006 7860     		str	r0, [r7, #4]
 581:.\Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_1_RANGE_HIGH_MASK);
 743              		.loc 1 581 0
 744 0008 074B     		ldr	r3, .L50
 745 000a 074A     		ldr	r2, .L50
 746 000c 1268     		ldr	r2, [r2]
 747 000e 1204     		lsl	r2, r2, #16
 748 0010 120C     		lsr	r2, r2, #16
 749 0012 1A60     		str	r2, [r3]
 582:.\Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_1_RANGE_HIGH_OFFSET);
 750              		.loc 1 582 0
 751 0014 044B     		ldr	r3, .L50
 752 0016 044A     		ldr	r2, .L50
 753 0018 1168     		ldr	r1, [r2]
 754 001a 7A68     		ldr	r2, [r7, #4]
 755 001c 1204     		lsl	r2, r2, #16
 756 001e 0A43     		orr	r2, r1
 757 0020 1A60     		str	r2, [r3]
 583:.\Generated_Source\PSoC4/ADC_1.c **** }
 758              		.loc 1 583 0
 759 0022 BD46     		mov	sp, r7
 760 0024 02B0     		add	sp, sp, #8
 761              		@ sp needed
 762 0026 80BD     		pop	{r7, pc}
 763              	.L51:
 764              		.align	2
 765              	.L50:
 766 0028 18001A40 		.word	1075445784
 767              		.cfi_endproc
 768              	.LFE10:
 769              		.size	ADC_1_SetHighLimit, .-ADC_1_SetHighLimit
 770              		.section	.text.ADC_1_SetLimitMask,"ax",%progbits
 771              		.align	2
 772              		.global	ADC_1_SetLimitMask
 773              		.code	16
 774              		.thumb_func
 775              		.type	ADC_1_SetLimitMask, %function
 776              	ADC_1_SetLimitMask:
 777              	.LFB11:
 584:.\Generated_Source\PSoC4/ADC_1.c **** 
 585:.\Generated_Source\PSoC4/ADC_1.c **** 
 586:.\Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 587:.\Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetLimitMask
 588:.\Generated_Source\PSoC4/ADC_1.c **** ********************************************************************************
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 25


 589:.\Generated_Source\PSoC4/ADC_1.c **** *
 590:.\Generated_Source\PSoC4/ADC_1.c **** * Summary:
 591:.\Generated_Source\PSoC4/ADC_1.c **** *  Sets the channel limit condition mask.
 592:.\Generated_Source\PSoC4/ADC_1.c **** *
 593:.\Generated_Source\PSoC4/ADC_1.c **** * Parameters:
 594:.\Generated_Source\PSoC4/ADC_1.c **** *  mask: Sets which channels that may cause a
 595:.\Generated_Source\PSoC4/ADC_1.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 596:.\Generated_Source\PSoC4/ADC_1.c **** *  will have no effect. For example, if only 6 channels were enabled,
 597:.\Generated_Source\PSoC4/ADC_1.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 598:.\Generated_Source\PSoC4/ADC_1.c **** *
 599:.\Generated_Source\PSoC4/ADC_1.c **** * Return:
 600:.\Generated_Source\PSoC4/ADC_1.c **** *  None.
 601:.\Generated_Source\PSoC4/ADC_1.c **** *
 602:.\Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 603:.\Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetLimitMask(uint32 mask)
 604:.\Generated_Source\PSoC4/ADC_1.c **** {
 778              		.loc 1 604 0
 779              		.cfi_startproc
 780 0000 80B5     		push	{r7, lr}
 781              		.cfi_def_cfa_offset 8
 782              		.cfi_offset 7, -8
 783              		.cfi_offset 14, -4
 784 0002 82B0     		sub	sp, sp, #8
 785              		.cfi_def_cfa_offset 16
 786 0004 00AF     		add	r7, sp, #0
 787              		.cfi_def_cfa_register 7
 788 0006 7860     		str	r0, [r7, #4]
 605:.\Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = mask & ADC_1_MAX_CHANNELS_EN_MASK;
 789              		.loc 1 605 0
 790 0008 034B     		ldr	r3, .L53
 791 000a 7968     		ldr	r1, [r7, #4]
 792 000c 0322     		mov	r2, #3
 793 000e 0A40     		and	r2, r1
 794 0010 1A60     		str	r2, [r3]
 606:.\Generated_Source\PSoC4/ADC_1.c **** }
 795              		.loc 1 606 0
 796 0012 BD46     		mov	sp, r7
 797 0014 02B0     		add	sp, sp, #8
 798              		@ sp needed
 799 0016 80BD     		pop	{r7, pc}
 800              	.L54:
 801              		.align	2
 802              	.L53:
 803 0018 38021A40 		.word	1075446328
 804              		.cfi_endproc
 805              	.LFE11:
 806              		.size	ADC_1_SetLimitMask, .-ADC_1_SetLimitMask
 807              		.section	.text.ADC_1_SetSatMask,"ax",%progbits
 808              		.align	2
 809              		.global	ADC_1_SetSatMask
 810              		.code	16
 811              		.thumb_func
 812              		.type	ADC_1_SetSatMask, %function
 813              	ADC_1_SetSatMask:
 814              	.LFB12:
 607:.\Generated_Source\PSoC4/ADC_1.c **** 
 608:.\Generated_Source\PSoC4/ADC_1.c **** 
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 26


 609:.\Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 610:.\Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetSatMask
 611:.\Generated_Source\PSoC4/ADC_1.c **** ********************************************************************************
 612:.\Generated_Source\PSoC4/ADC_1.c **** *
 613:.\Generated_Source\PSoC4/ADC_1.c **** * Summary:
 614:.\Generated_Source\PSoC4/ADC_1.c **** *  Sets the channel saturation event mask.
 615:.\Generated_Source\PSoC4/ADC_1.c **** *
 616:.\Generated_Source\PSoC4/ADC_1.c **** * Parameters:
 617:.\Generated_Source\PSoC4/ADC_1.c **** *  mask: Sets which channels that may cause a
 618:.\Generated_Source\PSoC4/ADC_1.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 619:.\Generated_Source\PSoC4/ADC_1.c **** *  will have no effect. For example, if only 8 channels were enabled,
 620:.\Generated_Source\PSoC4/ADC_1.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 621:.\Generated_Source\PSoC4/ADC_1.c **** *
 622:.\Generated_Source\PSoC4/ADC_1.c **** * Return:
 623:.\Generated_Source\PSoC4/ADC_1.c **** *  None.
 624:.\Generated_Source\PSoC4/ADC_1.c **** *
 625:.\Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 626:.\Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetSatMask(uint32 mask)
 627:.\Generated_Source\PSoC4/ADC_1.c **** {
 815              		.loc 1 627 0
 816              		.cfi_startproc
 817 0000 80B5     		push	{r7, lr}
 818              		.cfi_def_cfa_offset 8
 819              		.cfi_offset 7, -8
 820              		.cfi_offset 14, -4
 821 0002 82B0     		sub	sp, sp, #8
 822              		.cfi_def_cfa_offset 16
 823 0004 00AF     		add	r7, sp, #0
 824              		.cfi_def_cfa_register 7
 825 0006 7860     		str	r0, [r7, #4]
 628:.\Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SATURATE_INTR_MASK_REG = mask & ADC_1_MAX_CHANNELS_EN_MASK;
 826              		.loc 1 628 0
 827 0008 034B     		ldr	r3, .L56
 828 000a 7968     		ldr	r1, [r7, #4]
 829 000c 0322     		mov	r2, #3
 830 000e 0A40     		and	r2, r1
 831 0010 1A60     		str	r2, [r3]
 629:.\Generated_Source\PSoC4/ADC_1.c **** }
 832              		.loc 1 629 0
 833 0012 BD46     		mov	sp, r7
 834 0014 02B0     		add	sp, sp, #8
 835              		@ sp needed
 836 0016 80BD     		pop	{r7, pc}
 837              	.L57:
 838              		.align	2
 839              	.L56:
 840 0018 28021A40 		.word	1075446312
 841              		.cfi_endproc
 842              	.LFE12:
 843              		.size	ADC_1_SetSatMask, .-ADC_1_SetSatMask
 844              		.section	.text.ADC_1_SetOffset,"ax",%progbits
 845              		.align	2
 846              		.global	ADC_1_SetOffset
 847              		.code	16
 848              		.thumb_func
 849              		.type	ADC_1_SetOffset, %function
 850              	ADC_1_SetOffset:
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 27


 851              	.LFB13:
 630:.\Generated_Source\PSoC4/ADC_1.c **** 
 631:.\Generated_Source\PSoC4/ADC_1.c **** 
 632:.\Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 633:.\Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetOffset
 634:.\Generated_Source\PSoC4/ADC_1.c **** ********************************************************************************
 635:.\Generated_Source\PSoC4/ADC_1.c **** *
 636:.\Generated_Source\PSoC4/ADC_1.c **** * Summary:
 637:.\Generated_Source\PSoC4/ADC_1.c **** *   Description: Sets the ADC offset which is used by the functions
 638:.\Generated_Source\PSoC4/ADC_1.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 639:.\Generated_Source\PSoC4/ADC_1.c **** *   to substract the offset from the given reading
 640:.\Generated_Source\PSoC4/ADC_1.c **** *   before calculating the voltage conversion.
 641:.\Generated_Source\PSoC4/ADC_1.c **** *
 642:.\Generated_Source\PSoC4/ADC_1.c **** * Parameters:
 643:.\Generated_Source\PSoC4/ADC_1.c **** *  chan: ADC channel number.
 644:.\Generated_Source\PSoC4/ADC_1.c **** *  offset: This value is a measured value when the
 645:.\Generated_Source\PSoC4/ADC_1.c **** *          inputs are shorted or connected to the same input voltage.
 646:.\Generated_Source\PSoC4/ADC_1.c **** *
 647:.\Generated_Source\PSoC4/ADC_1.c **** * Return:
 648:.\Generated_Source\PSoC4/ADC_1.c **** *  None.
 649:.\Generated_Source\PSoC4/ADC_1.c **** *
 650:.\Generated_Source\PSoC4/ADC_1.c **** * Global variables:
 651:.\Generated_Source\PSoC4/ADC_1.c **** *  ADC_1_Offset:  Modified to set the user provided offset.
 652:.\Generated_Source\PSoC4/ADC_1.c **** *
 653:.\Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 654:.\Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetOffset(uint32 chan, int16 offset)
 655:.\Generated_Source\PSoC4/ADC_1.c **** {
 852              		.loc 1 655 0
 853              		.cfi_startproc
 854 0000 80B5     		push	{r7, lr}
 855              		.cfi_def_cfa_offset 8
 856              		.cfi_offset 7, -8
 857              		.cfi_offset 14, -4
 858 0002 82B0     		sub	sp, sp, #8
 859              		.cfi_def_cfa_offset 16
 860 0004 00AF     		add	r7, sp, #0
 861              		.cfi_def_cfa_register 7
 862 0006 7860     		str	r0, [r7, #4]
 863 0008 0A1C     		mov	r2, r1
 864 000a BB1C     		add	r3, r7, #2
 865 000c 1A80     		strh	r2, [r3]
 656:.\Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 657:.\Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_TOTAL_CHANNELS_NUM);
 866              		.loc 1 657 0
 867 000e 7B68     		ldr	r3, [r7, #4]
 868 0010 012B     		cmp	r3, #1
 869 0012 02D9     		bls	.L59
 870              		.loc 1 657 0 is_stmt 0 discriminator 1
 871 0014 0020     		mov	r0, #0
 872 0016 FFF7FEFF 		bl	CyHalt
 873              	.L59:
 658:.\Generated_Source\PSoC4/ADC_1.c **** 
 659:.\Generated_Source\PSoC4/ADC_1.c ****     ADC_1_offset[chan] = offset;
 874              		.loc 1 659 0 is_stmt 1
 875 001a 044B     		ldr	r3, .L60
 876 001c 7A68     		ldr	r2, [r7, #4]
 877 001e 5200     		lsl	r2, r2, #1
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 28


 878 0020 B91C     		add	r1, r7, #2
 879 0022 0988     		ldrh	r1, [r1]
 880 0024 D152     		strh	r1, [r2, r3]
 660:.\Generated_Source\PSoC4/ADC_1.c **** }
 881              		.loc 1 660 0
 882 0026 BD46     		mov	sp, r7
 883 0028 02B0     		add	sp, sp, #8
 884              		@ sp needed
 885 002a 80BD     		pop	{r7, pc}
 886              	.L61:
 887              		.align	2
 888              	.L60:
 889 002c 00000000 		.word	ADC_1_offset
 890              		.cfi_endproc
 891              	.LFE13:
 892              		.size	ADC_1_SetOffset, .-ADC_1_SetOffset
 893              		.section	.text.ADC_1_SetGain,"ax",%progbits
 894              		.align	2
 895              		.global	ADC_1_SetGain
 896              		.code	16
 897              		.thumb_func
 898              		.type	ADC_1_SetGain, %function
 899              	ADC_1_SetGain:
 900              	.LFB14:
 661:.\Generated_Source\PSoC4/ADC_1.c **** 
 662:.\Generated_Source\PSoC4/ADC_1.c **** 
 663:.\Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 664:.\Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetGain
 665:.\Generated_Source\PSoC4/ADC_1.c **** ********************************************************************************
 666:.\Generated_Source\PSoC4/ADC_1.c **** *
 667:.\Generated_Source\PSoC4/ADC_1.c **** * Summary:
 668:.\Generated_Source\PSoC4/ADC_1.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 669:.\Generated_Source\PSoC4/ADC_1.c **** *  conversion functions below. This value is set by default by the
 670:.\Generated_Source\PSoC4/ADC_1.c **** *  reference and input range settings. It should only be used to further
 671:.\Generated_Source\PSoC4/ADC_1.c **** *  calibrate the ADC with a known input or if an external reference is
 672:.\Generated_Source\PSoC4/ADC_1.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 673:.\Generated_Source\PSoC4/ADC_1.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 674:.\Generated_Source\PSoC4/ADC_1.c **** *  conversion between ADC counts and voltage.
 675:.\Generated_Source\PSoC4/ADC_1.c **** *
 676:.\Generated_Source\PSoC4/ADC_1.c **** * Parameters:
 677:.\Generated_Source\PSoC4/ADC_1.c **** *  chan: ADC channel number.
 678:.\Generated_Source\PSoC4/ADC_1.c **** *  adcGain: ADC gain in counts per 10 volts.
 679:.\Generated_Source\PSoC4/ADC_1.c **** *
 680:.\Generated_Source\PSoC4/ADC_1.c **** * Return:
 681:.\Generated_Source\PSoC4/ADC_1.c **** *  None.
 682:.\Generated_Source\PSoC4/ADC_1.c **** *
 683:.\Generated_Source\PSoC4/ADC_1.c **** * Global variables:
 684:.\Generated_Source\PSoC4/ADC_1.c **** *  ADC_1_CountsPer10Volt:  modified to set the ADC gain in counts
 685:.\Generated_Source\PSoC4/ADC_1.c **** *   per 10 volt.
 686:.\Generated_Source\PSoC4/ADC_1.c **** *
 687:.\Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 688:.\Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetGain(uint32 chan, int32 adcGain)
 689:.\Generated_Source\PSoC4/ADC_1.c **** {
 901              		.loc 1 689 0
 902              		.cfi_startproc
 903 0000 80B5     		push	{r7, lr}
 904              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 29


 905              		.cfi_offset 7, -8
 906              		.cfi_offset 14, -4
 907 0002 82B0     		sub	sp, sp, #8
 908              		.cfi_def_cfa_offset 16
 909 0004 00AF     		add	r7, sp, #0
 910              		.cfi_def_cfa_register 7
 911 0006 7860     		str	r0, [r7, #4]
 912 0008 3960     		str	r1, [r7]
 690:.\Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 691:.\Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_TOTAL_CHANNELS_NUM);
 913              		.loc 1 691 0
 914 000a 7B68     		ldr	r3, [r7, #4]
 915 000c 012B     		cmp	r3, #1
 916 000e 02D9     		bls	.L63
 917              		.loc 1 691 0 is_stmt 0 discriminator 1
 918 0010 0020     		mov	r0, #0
 919 0012 FFF7FEFF 		bl	CyHalt
 920              	.L63:
 692:.\Generated_Source\PSoC4/ADC_1.c **** 
 693:.\Generated_Source\PSoC4/ADC_1.c ****     ADC_1_countsPer10Volt[chan] = adcGain;
 921              		.loc 1 693 0 is_stmt 1
 922 0016 044B     		ldr	r3, .L64
 923 0018 7A68     		ldr	r2, [r7, #4]
 924 001a 9200     		lsl	r2, r2, #2
 925 001c 3968     		ldr	r1, [r7]
 926 001e D150     		str	r1, [r2, r3]
 694:.\Generated_Source\PSoC4/ADC_1.c **** }
 927              		.loc 1 694 0
 928 0020 BD46     		mov	sp, r7
 929 0022 02B0     		add	sp, sp, #8
 930              		@ sp needed
 931 0024 80BD     		pop	{r7, pc}
 932              	.L65:
 933 0026 C046     		.align	2
 934              	.L64:
 935 0028 00000000 		.word	ADC_1_countsPer10Volt
 936              		.cfi_endproc
 937              	.LFE14:
 938              		.size	ADC_1_SetGain, .-ADC_1_SetGain
 939              		.section	.text.ADC_1_CountsTo_mVolts,"ax",%progbits
 940              		.align	2
 941              		.global	ADC_1_CountsTo_mVolts
 942              		.code	16
 943              		.thumb_func
 944              		.type	ADC_1_CountsTo_mVolts, %function
 945              	ADC_1_CountsTo_mVolts:
 946              	.LFB15:
 695:.\Generated_Source\PSoC4/ADC_1.c **** 
 696:.\Generated_Source\PSoC4/ADC_1.c **** 
 697:.\Generated_Source\PSoC4/ADC_1.c **** #if(ADC_1_DEFAULT_JUSTIFICATION_SEL == ADC_1__RIGHT)
 698:.\Generated_Source\PSoC4/ADC_1.c **** 
 699:.\Generated_Source\PSoC4/ADC_1.c **** 
 700:.\Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
 701:.\Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_CountsTo_mVolts
 702:.\Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
 703:.\Generated_Source\PSoC4/ADC_1.c ****     *
 704:.\Generated_Source\PSoC4/ADC_1.c ****     * Summary:
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 30


 705:.\Generated_Source\PSoC4/ADC_1.c ****     *  This function converts ADC counts to mVolts
 706:.\Generated_Source\PSoC4/ADC_1.c ****     *  This function is not available when left data format justification selected.
 707:.\Generated_Source\PSoC4/ADC_1.c ****     *
 708:.\Generated_Source\PSoC4/ADC_1.c ****     * Parameters:
 709:.\Generated_Source\PSoC4/ADC_1.c ****     *  chan: The ADC channel number.
 710:.\Generated_Source\PSoC4/ADC_1.c ****     *  adcCounts: Result from the ADC conversion
 711:.\Generated_Source\PSoC4/ADC_1.c ****     *
 712:.\Generated_Source\PSoC4/ADC_1.c ****     * Return:
 713:.\Generated_Source\PSoC4/ADC_1.c ****     *  Results in mVolts
 714:.\Generated_Source\PSoC4/ADC_1.c ****     *
 715:.\Generated_Source\PSoC4/ADC_1.c ****     * Global variables:
 716:.\Generated_Source\PSoC4/ADC_1.c ****     *  ADC_1_countsPer10Volt:  used to convert ADC counts to mVolts.
 717:.\Generated_Source\PSoC4/ADC_1.c ****     *  ADC_1_Offset:  Used as the offset while converting ADC counts
 718:.\Generated_Source\PSoC4/ADC_1.c ****     *   to mVolts.
 719:.\Generated_Source\PSoC4/ADC_1.c ****     *
 720:.\Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
 721:.\Generated_Source\PSoC4/ADC_1.c ****     int16 ADC_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 722:.\Generated_Source\PSoC4/ADC_1.c ****     {
 947              		.loc 1 722 0
 948              		.cfi_startproc
 949 0000 80B5     		push	{r7, lr}
 950              		.cfi_def_cfa_offset 8
 951              		.cfi_offset 7, -8
 952              		.cfi_offset 14, -4
 953 0002 84B0     		sub	sp, sp, #16
 954              		.cfi_def_cfa_offset 24
 955 0004 00AF     		add	r7, sp, #0
 956              		.cfi_def_cfa_register 7
 957 0006 7860     		str	r0, [r7, #4]
 958 0008 0A1C     		mov	r2, r1
 959 000a BB1C     		add	r3, r7, #2
 960 000c 1A80     		strh	r2, [r3]
 723:.\Generated_Source\PSoC4/ADC_1.c ****         int16 mVolts;
 724:.\Generated_Source\PSoC4/ADC_1.c **** 
 725:.\Generated_Source\PSoC4/ADC_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/ADC_1.c ****         CYASSERT(chan < ADC_1_TOTAL_CHANNELS_NUM);
 961              		.loc 1 726 0
 962 000e 7B68     		ldr	r3, [r7, #4]
 963 0010 012B     		cmp	r3, #1
 964 0012 02D9     		bls	.L67
 965              		.loc 1 726 0 is_stmt 0 discriminator 1
 966 0014 0020     		mov	r0, #0
 967 0016 FFF7FEFF 		bl	CyHalt
 968              	.L67:
 727:.\Generated_Source\PSoC4/ADC_1.c **** 
 728:.\Generated_Source\PSoC4/ADC_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 729:.\Generated_Source\PSoC4/ADC_1.c ****         #if(ADC_1_DEFAULT_AVG_MODE == ADC_1__ACCUMULATE)
 730:.\Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_channelsConfig[chan] & ADC_1_AVERAGING_EN) != 0u)
 731:.\Generated_Source\PSoC4/ADC_1.c ****             {
 732:.\Generated_Source\PSoC4/ADC_1.c ****                 adcCounts /= ADC_1_DEFAULT_AVG_SAMPLES_DIV;
 733:.\Generated_Source\PSoC4/ADC_1.c ****             }
 734:.\Generated_Source\PSoC4/ADC_1.c ****         #endif /* ADC_1_DEFAULT_AVG_MODE == ADC_1__ACCUMULATE */
 735:.\Generated_Source\PSoC4/ADC_1.c **** 
 736:.\Generated_Source\PSoC4/ADC_1.c ****         /* Subtract ADC offset */
 737:.\Generated_Source\PSoC4/ADC_1.c ****         adcCounts -= ADC_1_offset[chan];
 969              		.loc 1 737 0 is_stmt 1
 970 001a BB1C     		add	r3, r7, #2
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 31


 971 001c 1A88     		ldrh	r2, [r3]
 972 001e 1E4B     		ldr	r3, .L73
 973 0020 7968     		ldr	r1, [r7, #4]
 974 0022 4900     		lsl	r1, r1, #1
 975 0024 CB5A     		ldrh	r3, [r1, r3]
 976 0026 9BB2     		uxth	r3, r3
 977 0028 9BB2     		uxth	r3, r3
 978 002a D31A     		sub	r3, r2, r3
 979 002c 9AB2     		uxth	r2, r3
 980 002e BB1C     		add	r3, r7, #2
 981 0030 1A80     		strh	r2, [r3]
 738:.\Generated_Source\PSoC4/ADC_1.c **** 
 739:.\Generated_Source\PSoC4/ADC_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 982              		.loc 1 739 0
 983 0032 BB1C     		add	r3, r7, #2
 984 0034 0021     		mov	r1, #0
 985 0036 5B5E     		ldrsh	r3, [r3, r1]
 986 0038 184A     		ldr	r2, .L73+4
 987 003a 5A43     		mul	r2, r3
 740:.\Generated_Source\PSoC4/ADC_1.c ****                  (ADC_1_countsPer10Volt[chan] / 2) : (-(ADC_1_countsPer10Volt[chan] / 2)) ))
 988              		.loc 1 740 0
 989 003c BB1C     		add	r3, r7, #2
 990 003e 0021     		mov	r1, #0
 991 0040 5B5E     		ldrsh	r3, [r3, r1]
 992 0042 002B     		cmp	r3, #0
 993 0044 08DD     		ble	.L68
 994              		.loc 1 740 0 is_stmt 0 discriminator 1
 995 0046 164B     		ldr	r3, .L73+8
 996 0048 7968     		ldr	r1, [r7, #4]
 997 004a 8900     		lsl	r1, r1, #2
 998 004c CB58     		ldr	r3, [r1, r3]
 999 004e 002B     		cmp	r3, #0
 1000 0050 00DA     		bge	.L69
 1001 0052 0133     		add	r3, r3, #1
 1002              	.L69:
 1003 0054 5B10     		asr	r3, r3, #1
 1004 0056 08E0     		b	.L70
 1005              	.L68:
 1006              		.loc 1 740 0 discriminator 2
 1007 0058 114B     		ldr	r3, .L73+8
 1008 005a 7968     		ldr	r1, [r7, #4]
 1009 005c 8900     		lsl	r1, r1, #2
 1010 005e CB58     		ldr	r3, [r1, r3]
 1011 0060 002B     		cmp	r3, #0
 1012 0062 00DA     		bge	.L71
 1013 0064 0133     		add	r3, r3, #1
 1014              	.L71:
 1015 0066 5B10     		asr	r3, r3, #1
 1016 0068 5B42     		neg	r3, r3
 1017              	.L70:
 739:.\Generated_Source\PSoC4/ADC_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 1018              		.loc 1 739 0 is_stmt 1
 1019 006a D218     		add	r2, r2, r3
 741:.\Generated_Source\PSoC4/ADC_1.c ****                  / ADC_1_countsPer10Volt[chan]);
 1020              		.loc 1 741 0
 1021 006c 0C4B     		ldr	r3, .L73+8
 1022 006e 7968     		ldr	r1, [r7, #4]
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 32


 1023 0070 8900     		lsl	r1, r1, #2
 1024 0072 CB58     		ldr	r3, [r1, r3]
 1025 0074 101C     		mov	r0, r2
 1026 0076 191C     		mov	r1, r3
 1027 0078 FFF7FEFF 		bl	__aeabi_idiv
 1028 007c 031C     		mov	r3, r0
 1029 007e 1A1C     		mov	r2, r3
 739:.\Generated_Source\PSoC4/ADC_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 1030              		.loc 1 739 0
 1031 0080 3B1C     		mov	r3, r7
 1032 0082 0E33     		add	r3, r3, #14
 1033 0084 1A80     		strh	r2, [r3]
 742:.\Generated_Source\PSoC4/ADC_1.c **** 
 743:.\Generated_Source\PSoC4/ADC_1.c ****         return( mVolts );
 1034              		.loc 1 743 0
 1035 0086 3B1C     		mov	r3, r7
 1036 0088 0E33     		add	r3, r3, #14
 1037 008a 1B88     		ldrh	r3, [r3]
 1038 008c 1BB2     		sxth	r3, r3
 744:.\Generated_Source\PSoC4/ADC_1.c ****     }
 1039              		.loc 1 744 0
 1040 008e 181C     		mov	r0, r3
 1041 0090 BD46     		mov	sp, r7
 1042 0092 04B0     		add	sp, sp, #16
 1043              		@ sp needed
 1044 0094 80BD     		pop	{r7, pc}
 1045              	.L74:
 1046 0096 C046     		.align	2
 1047              	.L73:
 1048 0098 00000000 		.word	ADC_1_offset
 1049 009c 10270000 		.word	10000
 1050 00a0 00000000 		.word	ADC_1_countsPer10Volt
 1051              		.cfi_endproc
 1052              	.LFE15:
 1053              		.size	ADC_1_CountsTo_mVolts, .-ADC_1_CountsTo_mVolts
 1054              		.global	__aeabi_lmul
 1055              		.global	__aeabi_ldivmod
 1056              		.section	.text.ADC_1_CountsTo_uVolts,"ax",%progbits
 1057              		.align	2
 1058              		.global	ADC_1_CountsTo_uVolts
 1059              		.code	16
 1060              		.thumb_func
 1061              		.type	ADC_1_CountsTo_uVolts, %function
 1062              	ADC_1_CountsTo_uVolts:
 1063              	.LFB16:
 745:.\Generated_Source\PSoC4/ADC_1.c **** 
 746:.\Generated_Source\PSoC4/ADC_1.c **** 
 747:.\Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
 748:.\Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_CountsTo_uVolts
 749:.\Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
 750:.\Generated_Source\PSoC4/ADC_1.c ****     *
 751:.\Generated_Source\PSoC4/ADC_1.c ****     * Summary:
 752:.\Generated_Source\PSoC4/ADC_1.c ****     *  This function converts ADC counts to micro Volts
 753:.\Generated_Source\PSoC4/ADC_1.c ****     *  This function is not available when left data format justification selected.
 754:.\Generated_Source\PSoC4/ADC_1.c ****     *
 755:.\Generated_Source\PSoC4/ADC_1.c ****     * Parameters:
 756:.\Generated_Source\PSoC4/ADC_1.c ****     *  chan: The ADC channel number.
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 33


 757:.\Generated_Source\PSoC4/ADC_1.c ****     *  adcCounts: Result from the ADC conversion
 758:.\Generated_Source\PSoC4/ADC_1.c ****     *
 759:.\Generated_Source\PSoC4/ADC_1.c ****     * Return:
 760:.\Generated_Source\PSoC4/ADC_1.c ****     *  Results in uVolts
 761:.\Generated_Source\PSoC4/ADC_1.c ****     *
 762:.\Generated_Source\PSoC4/ADC_1.c ****     * Global variables:
 763:.\Generated_Source\PSoC4/ADC_1.c ****     *  ADC_1_countsPer10Volt:  used to convert ADC counts to uVolts.
 764:.\Generated_Source\PSoC4/ADC_1.c ****     *  ADC_1_Offset:  Used as the offset while converting ADC counts
 765:.\Generated_Source\PSoC4/ADC_1.c ****     *   to mVolts.
 766:.\Generated_Source\PSoC4/ADC_1.c ****     *
 767:.\Generated_Source\PSoC4/ADC_1.c ****     * Theory:
 768:.\Generated_Source\PSoC4/ADC_1.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 769:.\Generated_Source\PSoC4/ADC_1.c ****     *  number in the conversion to uVolts and at the same time not loose
 770:.\Generated_Source\PSoC4/ADC_1.c ****     *  resolution.
 771:.\Generated_Source\PSoC4/ADC_1.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 772:.\Generated_Source\PSoC4/ADC_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 773:.\Generated_Source\PSoC4/ADC_1.c ****     *
 774:.\Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
 775:.\Generated_Source\PSoC4/ADC_1.c ****     int32 ADC_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 776:.\Generated_Source\PSoC4/ADC_1.c ****     {
 1064              		.loc 1 776 0
 1065              		.cfi_startproc
 1066 0000 B0B5     		push	{r4, r5, r7, lr}
 1067              		.cfi_def_cfa_offset 16
 1068              		.cfi_offset 4, -16
 1069              		.cfi_offset 5, -12
 1070              		.cfi_offset 7, -8
 1071              		.cfi_offset 14, -4
 1072 0002 86B0     		sub	sp, sp, #24
 1073              		.cfi_def_cfa_offset 40
 1074 0004 00AF     		add	r7, sp, #0
 1075              		.cfi_def_cfa_register 7
 1076 0006 F860     		str	r0, [r7, #12]
 1077 0008 0A1C     		mov	r2, r1
 1078 000a 3B1C     		mov	r3, r7
 1079 000c 0A33     		add	r3, r3, #10
 1080 000e 1A80     		strh	r2, [r3]
 777:.\Generated_Source\PSoC4/ADC_1.c ****         int64 uVolts;
 778:.\Generated_Source\PSoC4/ADC_1.c **** 
 779:.\Generated_Source\PSoC4/ADC_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 780:.\Generated_Source\PSoC4/ADC_1.c ****         CYASSERT(chan < ADC_1_TOTAL_CHANNELS_NUM);
 1081              		.loc 1 780 0
 1082 0010 FB68     		ldr	r3, [r7, #12]
 1083 0012 012B     		cmp	r3, #1
 1084 0014 02D9     		bls	.L76
 1085              		.loc 1 780 0 is_stmt 0 discriminator 1
 1086 0016 0020     		mov	r0, #0
 1087 0018 FFF7FEFF 		bl	CyHalt
 1088              	.L76:
 781:.\Generated_Source\PSoC4/ADC_1.c **** 
 782:.\Generated_Source\PSoC4/ADC_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 783:.\Generated_Source\PSoC4/ADC_1.c ****         #if(ADC_1_DEFAULT_AVG_MODE == ADC_1__ACCUMULATE)
 784:.\Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_channelsConfig[chan] & ADC_1_AVERAGING_EN) != 0u)
 785:.\Generated_Source\PSoC4/ADC_1.c ****             {
 786:.\Generated_Source\PSoC4/ADC_1.c ****                 adcCounts /= ADC_1_DEFAULT_AVG_SAMPLES_DIV;
 787:.\Generated_Source\PSoC4/ADC_1.c ****             }
 788:.\Generated_Source\PSoC4/ADC_1.c ****         #endif /* ADC_1_DEFAULT_AVG_MODE == ADC_1__ACCUMULATE */
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 34


 789:.\Generated_Source\PSoC4/ADC_1.c **** 
 790:.\Generated_Source\PSoC4/ADC_1.c ****         /* Subtract ADC offset */
 791:.\Generated_Source\PSoC4/ADC_1.c ****         adcCounts -= ADC_1_offset[chan];
 1089              		.loc 1 791 0 is_stmt 1
 1090 001c 3B1C     		mov	r3, r7
 1091 001e 0A33     		add	r3, r3, #10
 1092 0020 1A88     		ldrh	r2, [r3]
 1093 0022 1B4B     		ldr	r3, .L78+8
 1094 0024 F968     		ldr	r1, [r7, #12]
 1095 0026 4900     		lsl	r1, r1, #1
 1096 0028 CB5A     		ldrh	r3, [r1, r3]
 1097 002a 9BB2     		uxth	r3, r3
 1098 002c 9BB2     		uxth	r3, r3
 1099 002e D31A     		sub	r3, r2, r3
 1100 0030 9AB2     		uxth	r2, r3
 1101 0032 3B1C     		mov	r3, r7
 1102 0034 0A33     		add	r3, r3, #10
 1103 0036 1A80     		strh	r2, [r3]
 792:.\Generated_Source\PSoC4/ADC_1.c **** 
 793:.\Generated_Source\PSoC4/ADC_1.c ****         uVolts = ((int64)adcCounts * ADC_1_10UV_COUNTS) / ADC_1_countsPer10Volt[chan];
 1104              		.loc 1 793 0
 1105 0038 3B1C     		mov	r3, r7
 1106 003a 0A33     		add	r3, r3, #10
 1107 003c 1B88     		ldrh	r3, [r3]
 1108 003e 1BB2     		sxth	r3, r3
 1109 0040 3B60     		str	r3, [r7]
 1110 0042 DB17     		asr	r3, r3, #31
 1111 0044 7B60     		str	r3, [r7, #4]
 1112 0046 3868     		ldr	r0, [r7]
 1113 0048 7968     		ldr	r1, [r7, #4]
 1114 004a 104B     		ldr	r3, .L78+4
 1115 004c 0E4A     		ldr	r2, .L78
 1116 004e FFF7FEFF 		bl	__aeabi_lmul
 1117 0052 021C     		mov	r2, r0
 1118 0054 0B1C     		mov	r3, r1
 1119 0056 0F49     		ldr	r1, .L78+12
 1120 0058 F868     		ldr	r0, [r7, #12]
 1121 005a 8000     		lsl	r0, r0, #2
 1122 005c 4158     		ldr	r1, [r0, r1]
 1123 005e 0C1C     		mov	r4, r1
 1124 0060 C917     		asr	r1, r1, #31
 1125 0062 0D1C     		mov	r5, r1
 1126 0064 101C     		mov	r0, r2
 1127 0066 191C     		mov	r1, r3
 1128 0068 221C     		mov	r2, r4
 1129 006a 2B1C     		mov	r3, r5
 1130 006c FFF7FEFF 		bl	__aeabi_ldivmod
 1131 0070 031C     		mov	r3, r0
 1132 0072 0C1C     		mov	r4, r1
 1133 0074 3B61     		str	r3, [r7, #16]
 1134 0076 7C61     		str	r4, [r7, #20]
 794:.\Generated_Source\PSoC4/ADC_1.c **** 
 795:.\Generated_Source\PSoC4/ADC_1.c ****         return( (int32)uVolts );
 1135              		.loc 1 795 0
 1136 0078 3B69     		ldr	r3, [r7, #16]
 796:.\Generated_Source\PSoC4/ADC_1.c ****     }
 1137              		.loc 1 796 0
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 35


 1138 007a 181C     		mov	r0, r3
 1139 007c BD46     		mov	sp, r7
 1140 007e 06B0     		add	sp, sp, #24
 1141              		@ sp needed
 1142 0080 B0BD     		pop	{r4, r5, r7, pc}
 1143              	.L79:
 1144 0082 C046C046 		.align	3
 1144      C046
 1145              	.L78:
 1146 0088 80969800 		.word	10000000
 1147 008c 00000000 		.word	0
 1148 0090 00000000 		.word	ADC_1_offset
 1149 0094 00000000 		.word	ADC_1_countsPer10Volt
 1150              		.cfi_endproc
 1151              	.LFE16:
 1152              		.size	ADC_1_CountsTo_uVolts, .-ADC_1_CountsTo_uVolts
 1153              		.global	__aeabi_i2f
 1154              		.global	__aeabi_fmul
 1155              		.global	__aeabi_fdiv
 1156              		.section	.text.ADC_1_CountsTo_Volts,"ax",%progbits
 1157              		.align	2
 1158              		.global	ADC_1_CountsTo_Volts
 1159              		.code	16
 1160              		.thumb_func
 1161              		.type	ADC_1_CountsTo_Volts, %function
 1162              	ADC_1_CountsTo_Volts:
 1163              	.LFB17:
 797:.\Generated_Source\PSoC4/ADC_1.c **** 
 798:.\Generated_Source\PSoC4/ADC_1.c **** 
 799:.\Generated_Source\PSoC4/ADC_1.c ****     /*******************************************************************************
 800:.\Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_CountsTo_Volts
 801:.\Generated_Source\PSoC4/ADC_1.c ****     ********************************************************************************
 802:.\Generated_Source\PSoC4/ADC_1.c ****     *
 803:.\Generated_Source\PSoC4/ADC_1.c ****     * Summary:
 804:.\Generated_Source\PSoC4/ADC_1.c ****     *  Converts the ADC output to Volts as a floating point number.
 805:.\Generated_Source\PSoC4/ADC_1.c ****     *  This function is not available when left data format justification selected.
 806:.\Generated_Source\PSoC4/ADC_1.c ****     *
 807:.\Generated_Source\PSoC4/ADC_1.c ****     * Parameters:
 808:.\Generated_Source\PSoC4/ADC_1.c ****     *  chan: The ADC channel number.
 809:.\Generated_Source\PSoC4/ADC_1.c ****     *  Result from the ADC conversion
 810:.\Generated_Source\PSoC4/ADC_1.c ****     *
 811:.\Generated_Source\PSoC4/ADC_1.c ****     * Return:
 812:.\Generated_Source\PSoC4/ADC_1.c ****     *  Results in Volts
 813:.\Generated_Source\PSoC4/ADC_1.c ****     *
 814:.\Generated_Source\PSoC4/ADC_1.c ****     * Global variables:
 815:.\Generated_Source\PSoC4/ADC_1.c ****     *  ADC_1_countsPer10Volt:  used to convert ADC counts to Volts.
 816:.\Generated_Source\PSoC4/ADC_1.c ****     *  ADC_1_Offset:  Used as the offset while converting ADC counts
 817:.\Generated_Source\PSoC4/ADC_1.c ****     *   to mVolts.
 818:.\Generated_Source\PSoC4/ADC_1.c ****     *
 819:.\Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
 820:.\Generated_Source\PSoC4/ADC_1.c ****     float32 ADC_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
 821:.\Generated_Source\PSoC4/ADC_1.c ****     {
 1164              		.loc 1 821 0
 1165              		.cfi_startproc
 1166 0000 90B5     		push	{r4, r7, lr}
 1167              		.cfi_def_cfa_offset 12
 1168              		.cfi_offset 4, -12
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 36


 1169              		.cfi_offset 7, -8
 1170              		.cfi_offset 14, -4
 1171 0002 85B0     		sub	sp, sp, #20
 1172              		.cfi_def_cfa_offset 32
 1173 0004 00AF     		add	r7, sp, #0
 1174              		.cfi_def_cfa_register 7
 1175 0006 7860     		str	r0, [r7, #4]
 1176 0008 0A1C     		mov	r2, r1
 1177 000a BB1C     		add	r3, r7, #2
 1178 000c 1A80     		strh	r2, [r3]
 822:.\Generated_Source\PSoC4/ADC_1.c ****         float32 volts;
 823:.\Generated_Source\PSoC4/ADC_1.c **** 
 824:.\Generated_Source\PSoC4/ADC_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 825:.\Generated_Source\PSoC4/ADC_1.c ****         CYASSERT(chan < ADC_1_TOTAL_CHANNELS_NUM);
 1179              		.loc 1 825 0
 1180 000e 7B68     		ldr	r3, [r7, #4]
 1181 0010 012B     		cmp	r3, #1
 1182 0012 02D9     		bls	.L81
 1183              		.loc 1 825 0 is_stmt 0 discriminator 1
 1184 0014 0020     		mov	r0, #0
 1185 0016 FFF7FEFF 		bl	CyHalt
 1186              	.L81:
 826:.\Generated_Source\PSoC4/ADC_1.c **** 
 827:.\Generated_Source\PSoC4/ADC_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 828:.\Generated_Source\PSoC4/ADC_1.c ****         #if(ADC_1_DEFAULT_AVG_MODE == ADC_1__ACCUMULATE)
 829:.\Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_channelsConfig[chan] & ADC_1_AVERAGING_EN) != 0u)
 830:.\Generated_Source\PSoC4/ADC_1.c ****             {
 831:.\Generated_Source\PSoC4/ADC_1.c ****                 adcCounts /= ADC_1_DEFAULT_AVG_SAMPLES_DIV;
 832:.\Generated_Source\PSoC4/ADC_1.c ****             }
 833:.\Generated_Source\PSoC4/ADC_1.c ****         #endif /* ADC_1_DEFAULT_AVG_MODE == ADC_1__ACCUMULATE */
 834:.\Generated_Source\PSoC4/ADC_1.c **** 
 835:.\Generated_Source\PSoC4/ADC_1.c ****         /* Subtract ADC offset */
 836:.\Generated_Source\PSoC4/ADC_1.c ****         adcCounts -= ADC_1_offset[chan];
 1187              		.loc 1 836 0 is_stmt 1
 1188 001a BB1C     		add	r3, r7, #2
 1189 001c 1A88     		ldrh	r2, [r3]
 1190 001e 154B     		ldr	r3, .L83
 1191 0020 7968     		ldr	r1, [r7, #4]
 1192 0022 4900     		lsl	r1, r1, #1
 1193 0024 CB5A     		ldrh	r3, [r1, r3]
 1194 0026 9BB2     		uxth	r3, r3
 1195 0028 9BB2     		uxth	r3, r3
 1196 002a D31A     		sub	r3, r2, r3
 1197 002c 9AB2     		uxth	r2, r3
 1198 002e BB1C     		add	r3, r7, #2
 1199 0030 1A80     		strh	r2, [r3]
 837:.\Generated_Source\PSoC4/ADC_1.c **** 
 838:.\Generated_Source\PSoC4/ADC_1.c ****         volts = ((float32)adcCounts * ADC_1_10V_COUNTS) / (float32)ADC_1_countsPer10Volt[chan];
 1200              		.loc 1 838 0
 1201 0032 BB1C     		add	r3, r7, #2
 1202 0034 0022     		mov	r2, #0
 1203 0036 9B5E     		ldrsh	r3, [r3, r2]
 1204 0038 181C     		mov	r0, r3
 1205 003a FFF7FEFF 		bl	__aeabi_i2f
 1206 003e 031C     		add	r3, r0, #0
 1207 0040 181C     		add	r0, r3, #0
 1208 0042 0D49     		ldr	r1, .L83+4
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 37


 1209 0044 FFF7FEFF 		bl	__aeabi_fmul
 1210 0048 031C     		add	r3, r0, #0
 1211 004a 1C1C     		add	r4, r3, #0
 1212 004c 0B4B     		ldr	r3, .L83+8
 1213 004e 7A68     		ldr	r2, [r7, #4]
 1214 0050 9200     		lsl	r2, r2, #2
 1215 0052 D358     		ldr	r3, [r2, r3]
 1216 0054 181C     		mov	r0, r3
 1217 0056 FFF7FEFF 		bl	__aeabi_i2f
 1218 005a 031C     		add	r3, r0, #0
 1219 005c 201C     		add	r0, r4, #0
 1220 005e 191C     		add	r1, r3, #0
 1221 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1222 0064 031C     		add	r3, r0, #0
 1223 0066 FB60     		str	r3, [r7, #12]
 839:.\Generated_Source\PSoC4/ADC_1.c **** 
 840:.\Generated_Source\PSoC4/ADC_1.c ****         return( volts );
 1224              		.loc 1 840 0
 1225 0068 FB68     		ldr	r3, [r7, #12]
 841:.\Generated_Source\PSoC4/ADC_1.c ****     }
 1226              		.loc 1 841 0
 1227 006a 181C     		add	r0, r3, #0
 1228 006c BD46     		mov	sp, r7
 1229 006e 05B0     		add	sp, sp, #20
 1230              		@ sp needed
 1231 0070 90BD     		pop	{r4, r7, pc}
 1232              	.L84:
 1233 0072 C046     		.align	2
 1234              	.L83:
 1235 0074 00000000 		.word	ADC_1_offset
 1236 0078 00002041 		.word	1092616192
 1237 007c 00000000 		.word	ADC_1_countsPer10Volt
 1238              		.cfi_endproc
 1239              	.LFE17:
 1240              		.size	ADC_1_CountsTo_Volts, .-ADC_1_CountsTo_Volts
 1241              		.section	.rodata
 1242              		.align	2
 1243              		.type	ADC_1_InputsPlacement.4717, %object
 1244              		.size	ADC_1_InputsPlacement.4717, 2
 1245              	ADC_1_InputsPlacement.4717:
 1246 0008 03       		.byte	3
 1247 0009 00       		.byte	0
 1248 000a 0000     		.text
 1249              	.Letext0:
 1250              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1251              		.section	.debug_info,"",%progbits
 1252              	.Ldebug_info0:
 1253 0000 96040000 		.4byte	0x496
 1254 0004 0400     		.2byte	0x4
 1255 0006 00000000 		.4byte	.Ldebug_abbrev0
 1256 000a 04       		.byte	0x4
 1257 000b 01       		.uleb128 0x1
 1258 000c F9010000 		.4byte	.LASF60
 1259 0010 01       		.byte	0x1
 1260 0011 28000000 		.4byte	.LASF61
 1261 0015 75020000 		.4byte	.LASF62
 1262 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 38


 1263 001d 00000000 		.4byte	0
 1264 0021 00000000 		.4byte	.Ldebug_line0
 1265 0025 02       		.uleb128 0x2
 1266 0026 01       		.byte	0x1
 1267 0027 06       		.byte	0x6
 1268 0028 64000000 		.4byte	.LASF0
 1269 002c 02       		.uleb128 0x2
 1270 002d 01       		.byte	0x1
 1271 002e 08       		.byte	0x8
 1272 002f EF020000 		.4byte	.LASF1
 1273 0033 02       		.uleb128 0x2
 1274 0034 02       		.byte	0x2
 1275 0035 05       		.byte	0x5
 1276 0036 25030000 		.4byte	.LASF2
 1277 003a 02       		.uleb128 0x2
 1278 003b 02       		.byte	0x2
 1279 003c 07       		.byte	0x7
 1280 003d 55010000 		.4byte	.LASF3
 1281 0041 02       		.uleb128 0x2
 1282 0042 04       		.byte	0x4
 1283 0043 05       		.byte	0x5
 1284 0044 A3000000 		.4byte	.LASF4
 1285 0048 02       		.uleb128 0x2
 1286 0049 04       		.byte	0x4
 1287 004a 07       		.byte	0x7
 1288 004b 33010000 		.4byte	.LASF5
 1289 004f 02       		.uleb128 0x2
 1290 0050 08       		.byte	0x8
 1291 0051 05       		.byte	0x5
 1292 0052 56000000 		.4byte	.LASF6
 1293 0056 02       		.uleb128 0x2
 1294 0057 08       		.byte	0x8
 1295 0058 07       		.byte	0x7
 1296 0059 7B000000 		.4byte	.LASF7
 1297 005d 03       		.uleb128 0x3
 1298 005e 04       		.byte	0x4
 1299 005f 05       		.byte	0x5
 1300 0060 696E7400 		.ascii	"int\000"
 1301 0064 02       		.uleb128 0x2
 1302 0065 04       		.byte	0x4
 1303 0066 07       		.byte	0x7
 1304 0067 0C010000 		.4byte	.LASF8
 1305 006b 04       		.uleb128 0x4
 1306 006c AC000000 		.4byte	.LASF9
 1307 0070 02       		.byte	0x2
 1308 0071 A1       		.byte	0xa1
 1309 0072 2C000000 		.4byte	0x2c
 1310 0076 04       		.uleb128 0x4
 1311 0077 00000000 		.4byte	.LASF10
 1312 007b 02       		.byte	0x2
 1313 007c A2       		.byte	0xa2
 1314 007d 3A000000 		.4byte	0x3a
 1315 0081 04       		.uleb128 0x4
 1316 0082 EC000000 		.4byte	.LASF11
 1317 0086 02       		.byte	0x2
 1318 0087 A3       		.byte	0xa3
 1319 0088 48000000 		.4byte	0x48
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 39


 1320 008c 04       		.uleb128 0x4
 1321 008d 9C030000 		.4byte	.LASF12
 1322 0091 02       		.byte	0x2
 1323 0092 A5       		.byte	0xa5
 1324 0093 33000000 		.4byte	0x33
 1325 0097 04       		.uleb128 0x4
 1326 0098 9D000000 		.4byte	.LASF13
 1327 009c 02       		.byte	0x2
 1328 009d A6       		.byte	0xa6
 1329 009e 41000000 		.4byte	0x41
 1330 00a2 04       		.uleb128 0x4
 1331 00a3 B0010000 		.4byte	.LASF14
 1332 00a7 02       		.byte	0x2
 1333 00a8 A7       		.byte	0xa7
 1334 00a9 AD000000 		.4byte	0xad
 1335 00ad 02       		.uleb128 0x2
 1336 00ae 04       		.byte	0x4
 1337 00af 04       		.byte	0x4
 1338 00b0 F3010000 		.4byte	.LASF15
 1339 00b4 02       		.uleb128 0x2
 1340 00b5 08       		.byte	0x8
 1341 00b6 04       		.byte	0x4
 1342 00b7 B2000000 		.4byte	.LASF16
 1343 00bb 04       		.uleb128 0x4
 1344 00bc ED010000 		.4byte	.LASF17
 1345 00c0 02       		.byte	0x2
 1346 00c1 AC       		.byte	0xac
 1347 00c2 4F000000 		.4byte	0x4f
 1348 00c6 02       		.uleb128 0x2
 1349 00c7 01       		.byte	0x1
 1350 00c8 08       		.byte	0x8
 1351 00c9 3A030000 		.4byte	.LASF18
 1352 00cd 05       		.uleb128 0x5
 1353 00ce AA010000 		.4byte	.LASF19
 1354 00d2 02       		.byte	0x2
 1355 00d3 4D01     		.2byte	0x14d
 1356 00d5 D9000000 		.4byte	0xd9
 1357 00d9 06       		.uleb128 0x6
 1358 00da 81000000 		.4byte	0x81
 1359 00de 02       		.uleb128 0x2
 1360 00df 04       		.byte	0x4
 1361 00e0 07       		.byte	0x7
 1362 00e1 B8010000 		.4byte	.LASF20
 1363 00e5 07       		.uleb128 0x7
 1364 00e6 F8000000 		.4byte	.LASF25
 1365 00ea 01       		.byte	0x1
 1366 00eb 3F       		.byte	0x3f
 1367 00ec 00000000 		.4byte	.LFB0
 1368 00f0 24000000 		.4byte	.LFE0-.LFB0
 1369 00f4 01       		.uleb128 0x1
 1370 00f5 9C       		.byte	0x9c
 1371 00f6 08       		.uleb128 0x8
 1372 00f7 70000000 		.4byte	.LASF36
 1373 00fb 01       		.byte	0x1
 1374 00fc 5E       		.byte	0x5e
 1375 00fd 00000000 		.4byte	.LFB1
 1376 0101 F0010000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 40


 1377 0105 01       		.uleb128 0x1
 1378 0106 9C       		.byte	0x9c
 1379 0107 47010000 		.4byte	0x147
 1380 010b 09       		.uleb128 0x9
 1381 010c 2F030000 		.4byte	.LASF21
 1382 0110 01       		.byte	0x1
 1383 0111 60       		.byte	0x60
 1384 0112 81000000 		.4byte	0x81
 1385 0116 02       		.uleb128 0x2
 1386 0117 91       		.byte	0x91
 1387 0118 6C       		.sleb128 -20
 1388 0119 09       		.uleb128 0x9
 1389 011a 4B010000 		.4byte	.LASF22
 1390 011e 01       		.byte	0x1
 1391 011f 61       		.byte	0x61
 1392 0120 81000000 		.4byte	0x81
 1393 0124 02       		.uleb128 0x2
 1394 0125 91       		.byte	0x91
 1395 0126 64       		.sleb128 -28
 1396 0127 09       		.uleb128 0x9
 1397 0128 0F000000 		.4byte	.LASF23
 1398 012c 01       		.byte	0x1
 1399 012d 62       		.byte	0x62
 1400 012e 97000000 		.4byte	0x97
 1401 0132 02       		.uleb128 0x2
 1402 0133 91       		.byte	0x91
 1403 0134 68       		.sleb128 -24
 1404 0135 09       		.uleb128 0x9
 1405 0136 6C030000 		.4byte	.LASF24
 1406 013a 01       		.byte	0x1
 1407 013b 65       		.byte	0x65
 1408 013c 57010000 		.4byte	0x157
 1409 0140 05       		.uleb128 0x5
 1410 0141 03       		.byte	0x3
 1411 0142 08000000 		.4byte	ADC_1_InputsPlacement.4717
 1412 0146 00       		.byte	0
 1413 0147 0A       		.uleb128 0xa
 1414 0148 6B000000 		.4byte	0x6b
 1415 014c 57010000 		.4byte	0x157
 1416 0150 0B       		.uleb128 0xb
 1417 0151 DE000000 		.4byte	0xde
 1418 0155 01       		.byte	0x1
 1419 0156 00       		.byte	0
 1420 0157 0C       		.uleb128 0xc
 1421 0158 47010000 		.4byte	0x147
 1422 015c 0D       		.uleb128 0xd
 1423 015d 49000000 		.4byte	.LASF26
 1424 0161 01       		.byte	0x1
 1425 0162 2701     		.2byte	0x127
 1426 0164 00000000 		.4byte	.LFB2
 1427 0168 28000000 		.4byte	.LFE2-.LFB2
 1428 016c 01       		.uleb128 0x1
 1429 016d 9C       		.byte	0x9c
 1430 016e 0E       		.uleb128 0xe
 1431 016f 92000000 		.4byte	.LASF27
 1432 0173 01       		.byte	0x1
 1433 0174 4A01     		.2byte	0x14a
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 41


 1434 0176 00000000 		.4byte	.LFB3
 1435 017a 18000000 		.4byte	.LFE3-.LFB3
 1436 017e 01       		.uleb128 0x1
 1437 017f 9C       		.byte	0x9c
 1438 0180 0E       		.uleb128 0xe
 1439 0181 20010000 		.4byte	.LASF28
 1440 0185 01       		.byte	0x1
 1441 0186 6401     		.2byte	0x164
 1442 0188 00000000 		.4byte	.LFB4
 1443 018c 1C000000 		.4byte	.LFE4-.LFB4
 1444 0190 01       		.uleb128 0x1
 1445 0191 9C       		.byte	0x9c
 1446 0192 0E       		.uleb128 0xe
 1447 0193 16000000 		.4byte	.LASF29
 1448 0197 01       		.byte	0x1
 1449 0198 7D01     		.2byte	0x17d
 1450 019a 00000000 		.4byte	.LFB5
 1451 019e 1C000000 		.4byte	.LFE5-.LFB5
 1452 01a2 01       		.uleb128 0x1
 1453 01a3 9C       		.byte	0x9c
 1454 01a4 0F       		.uleb128 0xf
 1455 01a5 C8020000 		.4byte	.LASF31
 1456 01a9 01       		.byte	0x1
 1457 01aa 9F01     		.2byte	0x19f
 1458 01ac 81000000 		.4byte	0x81
 1459 01b0 00000000 		.4byte	.LFB6
 1460 01b4 48000000 		.4byte	.LFE6-.LFB6
 1461 01b8 01       		.uleb128 0x1
 1462 01b9 9C       		.byte	0x9c
 1463 01ba DD010000 		.4byte	0x1dd
 1464 01be 10       		.uleb128 0x10
 1465 01bf 04010000 		.4byte	.LASF33
 1466 01c3 01       		.byte	0x1
 1467 01c4 9F01     		.2byte	0x19f
 1468 01c6 81000000 		.4byte	0x81
 1469 01ca 02       		.uleb128 0x2
 1470 01cb 91       		.byte	0x91
 1471 01cc 6C       		.sleb128 -20
 1472 01cd 11       		.uleb128 0x11
 1473 01ce 65030000 		.4byte	.LASF30
 1474 01d2 01       		.byte	0x1
 1475 01d3 A101     		.2byte	0x1a1
 1476 01d5 81000000 		.4byte	0x81
 1477 01d9 02       		.uleb128 0x2
 1478 01da 91       		.byte	0x91
 1479 01db 74       		.sleb128 -12
 1480 01dc 00       		.byte	0
 1481 01dd 12       		.uleb128 0x12
 1482 01de FD020000 		.4byte	.LASF32
 1483 01e2 01       		.byte	0x1
 1484 01e3 D501     		.2byte	0x1d5
 1485 01e5 8C000000 		.4byte	0x8c
 1486 01e9 00000000 		.4byte	.LFB7
 1487 01ed 44000000 		.4byte	.LFE7-.LFB7
 1488 01f1 01       		.uleb128 0x1
 1489 01f2 9C       		.byte	0x9c
 1490 01f3 16020000 		.4byte	0x216
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 42


 1491 01f7 10       		.uleb128 0x10
 1492 01f8 35030000 		.4byte	.LASF34
 1493 01fc 01       		.byte	0x1
 1494 01fd D501     		.2byte	0x1d5
 1495 01ff 81000000 		.4byte	0x81
 1496 0203 02       		.uleb128 0x2
 1497 0204 91       		.byte	0x91
 1498 0205 6C       		.sleb128 -20
 1499 0206 11       		.uleb128 0x11
 1500 0207 A2030000 		.4byte	.LASF35
 1501 020b 01       		.byte	0x1
 1502 020c D701     		.2byte	0x1d7
 1503 020e 81000000 		.4byte	0x81
 1504 0212 02       		.uleb128 0x2
 1505 0213 91       		.byte	0x91
 1506 0214 74       		.sleb128 -12
 1507 0215 00       		.byte	0
 1508 0216 13       		.uleb128 0x13
 1509 0217 B9000000 		.4byte	.LASF37
 1510 021b 01       		.byte	0x1
 1511 021c 0202     		.2byte	0x202
 1512 021e 00000000 		.4byte	.LFB8
 1513 0222 1C000000 		.4byte	.LFE8-.LFB8
 1514 0226 01       		.uleb128 0x1
 1515 0227 9C       		.byte	0x9c
 1516 0228 3C020000 		.4byte	0x23c
 1517 022c 10       		.uleb128 0x10
 1518 022d F3000000 		.4byte	.LASF38
 1519 0231 01       		.byte	0x1
 1520 0232 0202     		.2byte	0x202
 1521 0234 81000000 		.4byte	0x81
 1522 0238 02       		.uleb128 0x2
 1523 0239 91       		.byte	0x91
 1524 023a 74       		.sleb128 -12
 1525 023b 00       		.byte	0
 1526 023c 13       		.uleb128 0x13
 1527 023d 7E010000 		.4byte	.LASF39
 1528 0241 01       		.byte	0x1
 1529 0242 2E02     		.2byte	0x22e
 1530 0244 00000000 		.4byte	.LFB9
 1531 0248 30000000 		.4byte	.LFE9-.LFB9
 1532 024c 01       		.uleb128 0x1
 1533 024d 9C       		.byte	0x9c
 1534 024e 62020000 		.4byte	0x262
 1535 0252 10       		.uleb128 0x10
 1536 0253 C1010000 		.4byte	.LASF40
 1537 0257 01       		.byte	0x1
 1538 0258 2E02     		.2byte	0x22e
 1539 025a 81000000 		.4byte	0x81
 1540 025e 02       		.uleb128 0x2
 1541 025f 91       		.byte	0x91
 1542 0260 74       		.sleb128 -12
 1543 0261 00       		.byte	0
 1544 0262 13       		.uleb128 0x13
 1545 0263 90010000 		.4byte	.LASF41
 1546 0267 01       		.byte	0x1
 1547 0268 4302     		.2byte	0x243
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 43


 1548 026a 00000000 		.4byte	.LFB10
 1549 026e 2C000000 		.4byte	.LFE10-.LFB10
 1550 0272 01       		.uleb128 0x1
 1551 0273 9C       		.byte	0x9c
 1552 0274 88020000 		.4byte	0x288
 1553 0278 10       		.uleb128 0x10
 1554 0279 82030000 		.4byte	.LASF42
 1555 027d 01       		.byte	0x1
 1556 027e 4302     		.2byte	0x243
 1557 0280 81000000 		.4byte	0x81
 1558 0284 02       		.uleb128 0x2
 1559 0285 91       		.byte	0x91
 1560 0286 74       		.sleb128 -12
 1561 0287 00       		.byte	0
 1562 0288 13       		.uleb128 0x13
 1563 0289 CB000000 		.4byte	.LASF43
 1564 028d 01       		.byte	0x1
 1565 028e 5B02     		.2byte	0x25b
 1566 0290 00000000 		.4byte	.LFB11
 1567 0294 1C000000 		.4byte	.LFE11-.LFB11
 1568 0298 01       		.uleb128 0x1
 1569 0299 9C       		.byte	0x9c
 1570 029a AE020000 		.4byte	0x2ae
 1571 029e 10       		.uleb128 0x10
 1572 029f F3000000 		.4byte	.LASF38
 1573 02a3 01       		.byte	0x1
 1574 02a4 5B02     		.2byte	0x25b
 1575 02a6 81000000 		.4byte	0x81
 1576 02aa 02       		.uleb128 0x2
 1577 02ab 91       		.byte	0x91
 1578 02ac 74       		.sleb128 -12
 1579 02ad 00       		.byte	0
 1580 02ae 13       		.uleb128 0x13
 1581 02af DE020000 		.4byte	.LASF44
 1582 02b3 01       		.byte	0x1
 1583 02b4 7202     		.2byte	0x272
 1584 02b6 00000000 		.4byte	.LFB12
 1585 02ba 1C000000 		.4byte	.LFE12-.LFB12
 1586 02be 01       		.uleb128 0x1
 1587 02bf 9C       		.byte	0x9c
 1588 02c0 D4020000 		.4byte	0x2d4
 1589 02c4 10       		.uleb128 0x10
 1590 02c5 F3000000 		.4byte	.LASF38
 1591 02c9 01       		.byte	0x1
 1592 02ca 7202     		.2byte	0x272
 1593 02cc 81000000 		.4byte	0x81
 1594 02d0 02       		.uleb128 0x2
 1595 02d1 91       		.byte	0x91
 1596 02d2 74       		.sleb128 -12
 1597 02d3 00       		.byte	0
 1598 02d4 14       		.uleb128 0x14
 1599 02d5 8C030000 		.4byte	.LASF45
 1600 02d9 01       		.byte	0x1
 1601 02da 8E02     		.2byte	0x28e
 1602 02dc 00000000 		.4byte	.LFB13
 1603 02e0 30000000 		.4byte	.LFE13-.LFB13
 1604 02e4 01       		.uleb128 0x1
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 44


 1605 02e5 9C       		.byte	0x9c
 1606 02e6 09030000 		.4byte	0x309
 1607 02ea 10       		.uleb128 0x10
 1608 02eb 35030000 		.4byte	.LASF34
 1609 02ef 01       		.byte	0x1
 1610 02f0 8E02     		.2byte	0x28e
 1611 02f2 81000000 		.4byte	0x81
 1612 02f6 02       		.uleb128 0x2
 1613 02f7 91       		.byte	0x91
 1614 02f8 74       		.sleb128 -12
 1615 02f9 10       		.uleb128 0x10
 1616 02fa 54030000 		.4byte	.LASF46
 1617 02fe 01       		.byte	0x1
 1618 02ff 8E02     		.2byte	0x28e
 1619 0301 8C000000 		.4byte	0x8c
 1620 0305 02       		.uleb128 0x2
 1621 0306 91       		.byte	0x91
 1622 0307 72       		.sleb128 -14
 1623 0308 00       		.byte	0
 1624 0309 14       		.uleb128 0x14
 1625 030a DF010000 		.4byte	.LASF47
 1626 030e 01       		.byte	0x1
 1627 030f B002     		.2byte	0x2b0
 1628 0311 00000000 		.4byte	.LFB14
 1629 0315 2C000000 		.4byte	.LFE14-.LFB14
 1630 0319 01       		.uleb128 0x1
 1631 031a 9C       		.byte	0x9c
 1632 031b 3E030000 		.4byte	0x33e
 1633 031f 10       		.uleb128 0x10
 1634 0320 35030000 		.4byte	.LASF34
 1635 0324 01       		.byte	0x1
 1636 0325 B002     		.2byte	0x2b0
 1637 0327 81000000 		.4byte	0x81
 1638 032b 02       		.uleb128 0x2
 1639 032c 91       		.byte	0x91
 1640 032d 74       		.sleb128 -12
 1641 032e 10       		.uleb128 0x10
 1642 032f 07000000 		.4byte	.LASF48
 1643 0333 01       		.byte	0x1
 1644 0334 B002     		.2byte	0x2b0
 1645 0336 97000000 		.4byte	0x97
 1646 033a 02       		.uleb128 0x2
 1647 033b 91       		.byte	0x91
 1648 033c 70       		.sleb128 -16
 1649 033d 00       		.byte	0
 1650 033e 12       		.uleb128 0x12
 1651 033f 68010000 		.4byte	.LASF49
 1652 0343 01       		.byte	0x1
 1653 0344 D102     		.2byte	0x2d1
 1654 0346 8C000000 		.4byte	0x8c
 1655 034a 00000000 		.4byte	.LFB15
 1656 034e A4000000 		.4byte	.LFE15-.LFB15
 1657 0352 01       		.uleb128 0x1
 1658 0353 9C       		.byte	0x9c
 1659 0354 86030000 		.4byte	0x386
 1660 0358 10       		.uleb128 0x10
 1661 0359 35030000 		.4byte	.LASF34
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 45


 1662 035d 01       		.byte	0x1
 1663 035e D102     		.2byte	0x2d1
 1664 0360 81000000 		.4byte	0x81
 1665 0364 02       		.uleb128 0x2
 1666 0365 91       		.byte	0x91
 1667 0366 6C       		.sleb128 -20
 1668 0367 10       		.uleb128 0x10
 1669 0368 5B030000 		.4byte	.LASF50
 1670 036c 01       		.byte	0x1
 1671 036d D102     		.2byte	0x2d1
 1672 036f 8C000000 		.4byte	0x8c
 1673 0373 02       		.uleb128 0x2
 1674 0374 91       		.byte	0x91
 1675 0375 6A       		.sleb128 -22
 1676 0376 11       		.uleb128 0x11
 1677 0377 A3010000 		.4byte	.LASF51
 1678 037b 01       		.byte	0x1
 1679 037c D302     		.2byte	0x2d3
 1680 037e 8C000000 		.4byte	0x8c
 1681 0382 02       		.uleb128 0x2
 1682 0383 91       		.byte	0x91
 1683 0384 76       		.sleb128 -10
 1684 0385 00       		.byte	0
 1685 0386 12       		.uleb128 0x12
 1686 0387 A9030000 		.4byte	.LASF52
 1687 038b 01       		.byte	0x1
 1688 038c 0703     		.2byte	0x307
 1689 038e 97000000 		.4byte	0x97
 1690 0392 00000000 		.4byte	.LFB16
 1691 0396 98000000 		.4byte	.LFE16-.LFB16
 1692 039a 01       		.uleb128 0x1
 1693 039b 9C       		.byte	0x9c
 1694 039c CE030000 		.4byte	0x3ce
 1695 03a0 10       		.uleb128 0x10
 1696 03a1 35030000 		.4byte	.LASF34
 1697 03a5 01       		.byte	0x1
 1698 03a6 0703     		.2byte	0x307
 1699 03a8 81000000 		.4byte	0x81
 1700 03ac 02       		.uleb128 0x2
 1701 03ad 91       		.byte	0x91
 1702 03ae 64       		.sleb128 -28
 1703 03af 10       		.uleb128 0x10
 1704 03b0 5B030000 		.4byte	.LASF50
 1705 03b4 01       		.byte	0x1
 1706 03b5 0703     		.2byte	0x307
 1707 03b7 8C000000 		.4byte	0x8c
 1708 03bb 02       		.uleb128 0x2
 1709 03bc 91       		.byte	0x91
 1710 03bd 62       		.sleb128 -30
 1711 03be 11       		.uleb128 0x11
 1712 03bf 19010000 		.4byte	.LASF53
 1713 03c3 01       		.byte	0x1
 1714 03c4 0903     		.2byte	0x309
 1715 03c6 BB000000 		.4byte	0xbb
 1716 03ca 02       		.uleb128 0x2
 1717 03cb 91       		.byte	0x91
 1718 03cc 68       		.sleb128 -24
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 46


 1719 03cd 00       		.byte	0
 1720 03ce 12       		.uleb128 0x12
 1721 03cf 3F030000 		.4byte	.LASF54
 1722 03d3 01       		.byte	0x1
 1723 03d4 3403     		.2byte	0x334
 1724 03d6 A2000000 		.4byte	0xa2
 1725 03da 00000000 		.4byte	.LFB17
 1726 03de 80000000 		.4byte	.LFE17-.LFB17
 1727 03e2 01       		.uleb128 0x1
 1728 03e3 9C       		.byte	0x9c
 1729 03e4 16040000 		.4byte	0x416
 1730 03e8 10       		.uleb128 0x10
 1731 03e9 35030000 		.4byte	.LASF34
 1732 03ed 01       		.byte	0x1
 1733 03ee 3403     		.2byte	0x334
 1734 03f0 81000000 		.4byte	0x81
 1735 03f4 02       		.uleb128 0x2
 1736 03f5 91       		.byte	0x91
 1737 03f6 64       		.sleb128 -28
 1738 03f7 10       		.uleb128 0x10
 1739 03f8 5B030000 		.4byte	.LASF50
 1740 03fc 01       		.byte	0x1
 1741 03fd 3403     		.2byte	0x334
 1742 03ff 8C000000 		.4byte	0x8c
 1743 0403 02       		.uleb128 0x2
 1744 0404 91       		.byte	0x91
 1745 0405 62       		.sleb128 -30
 1746 0406 11       		.uleb128 0x11
 1747 0407 45010000 		.4byte	.LASF55
 1748 040b 01       		.byte	0x1
 1749 040c 3603     		.2byte	0x336
 1750 040e A2000000 		.4byte	0xa2
 1751 0412 02       		.uleb128 0x2
 1752 0413 91       		.byte	0x91
 1753 0414 6C       		.sleb128 -20
 1754 0415 00       		.byte	0
 1755 0416 0A       		.uleb128 0xa
 1756 0417 81000000 		.4byte	0x81
 1757 041b 26040000 		.4byte	0x426
 1758 041f 0B       		.uleb128 0xb
 1759 0420 DE000000 		.4byte	0xde
 1760 0424 01       		.byte	0x1
 1761 0425 00       		.byte	0
 1762 0426 09       		.uleb128 0x9
 1763 0427 CA010000 		.4byte	.LASF56
 1764 042b 01       		.byte	0x1
 1765 042c 21       		.byte	0x21
 1766 042d 37040000 		.4byte	0x437
 1767 0431 05       		.uleb128 0x5
 1768 0432 03       		.byte	0x3
 1769 0433 00000000 		.4byte	ADC_1_channelsConfig
 1770 0437 0C       		.uleb128 0xc
 1771 0438 16040000 		.4byte	0x416
 1772 043c 15       		.uleb128 0x15
 1773 043d DE000000 		.4byte	.LASF57
 1774 0441 01       		.byte	0x1
 1775 0442 18       		.byte	0x18
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 47


 1776 0443 6B000000 		.4byte	0x6b
 1777 0447 05       		.uleb128 0x5
 1778 0448 03       		.byte	0x3
 1779 0449 00000000 		.4byte	ADC_1_initVar
 1780 044d 0A       		.uleb128 0xa
 1781 044e 8C000000 		.4byte	0x8c
 1782 0452 5D040000 		.4byte	0x45d
 1783 0456 0B       		.uleb128 0xb
 1784 0457 DE000000 		.4byte	0xde
 1785 045b 01       		.byte	0x1
 1786 045c 00       		.byte	0
 1787 045d 15       		.uleb128 0x15
 1788 045e BB020000 		.4byte	.LASF58
 1789 0462 01       		.byte	0x1
 1790 0463 19       		.byte	0x19
 1791 0464 6E040000 		.4byte	0x46e
 1792 0468 05       		.uleb128 0x5
 1793 0469 03       		.byte	0x3
 1794 046a 00000000 		.4byte	ADC_1_offset
 1795 046e 06       		.uleb128 0x6
 1796 046f 4D040000 		.4byte	0x44d
 1797 0473 0A       		.uleb128 0xa
 1798 0474 97000000 		.4byte	0x97
 1799 0478 83040000 		.4byte	0x483
 1800 047c 0B       		.uleb128 0xb
 1801 047d DE000000 		.4byte	0xde
 1802 0481 01       		.byte	0x1
 1803 0482 00       		.byte	0
 1804 0483 15       		.uleb128 0x15
 1805 0484 0F030000 		.4byte	.LASF59
 1806 0488 01       		.byte	0x1
 1807 0489 1A       		.byte	0x1a
 1808 048a 94040000 		.4byte	0x494
 1809 048e 05       		.uleb128 0x5
 1810 048f 03       		.byte	0x3
 1811 0490 00000000 		.4byte	ADC_1_countsPer10Volt
 1812 0494 06       		.uleb128 0x6
 1813 0495 73040000 		.4byte	0x473
 1814 0499 00       		.byte	0
 1815              		.section	.debug_abbrev,"",%progbits
 1816              	.Ldebug_abbrev0:
 1817 0000 01       		.uleb128 0x1
 1818 0001 11       		.uleb128 0x11
 1819 0002 01       		.byte	0x1
 1820 0003 25       		.uleb128 0x25
 1821 0004 0E       		.uleb128 0xe
 1822 0005 13       		.uleb128 0x13
 1823 0006 0B       		.uleb128 0xb
 1824 0007 03       		.uleb128 0x3
 1825 0008 0E       		.uleb128 0xe
 1826 0009 1B       		.uleb128 0x1b
 1827 000a 0E       		.uleb128 0xe
 1828 000b 55       		.uleb128 0x55
 1829 000c 17       		.uleb128 0x17
 1830 000d 11       		.uleb128 0x11
 1831 000e 01       		.uleb128 0x1
 1832 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 48


 1833 0010 17       		.uleb128 0x17
 1834 0011 00       		.byte	0
 1835 0012 00       		.byte	0
 1836 0013 02       		.uleb128 0x2
 1837 0014 24       		.uleb128 0x24
 1838 0015 00       		.byte	0
 1839 0016 0B       		.uleb128 0xb
 1840 0017 0B       		.uleb128 0xb
 1841 0018 3E       		.uleb128 0x3e
 1842 0019 0B       		.uleb128 0xb
 1843 001a 03       		.uleb128 0x3
 1844 001b 0E       		.uleb128 0xe
 1845 001c 00       		.byte	0
 1846 001d 00       		.byte	0
 1847 001e 03       		.uleb128 0x3
 1848 001f 24       		.uleb128 0x24
 1849 0020 00       		.byte	0
 1850 0021 0B       		.uleb128 0xb
 1851 0022 0B       		.uleb128 0xb
 1852 0023 3E       		.uleb128 0x3e
 1853 0024 0B       		.uleb128 0xb
 1854 0025 03       		.uleb128 0x3
 1855 0026 08       		.uleb128 0x8
 1856 0027 00       		.byte	0
 1857 0028 00       		.byte	0
 1858 0029 04       		.uleb128 0x4
 1859 002a 16       		.uleb128 0x16
 1860 002b 00       		.byte	0
 1861 002c 03       		.uleb128 0x3
 1862 002d 0E       		.uleb128 0xe
 1863 002e 3A       		.uleb128 0x3a
 1864 002f 0B       		.uleb128 0xb
 1865 0030 3B       		.uleb128 0x3b
 1866 0031 0B       		.uleb128 0xb
 1867 0032 49       		.uleb128 0x49
 1868 0033 13       		.uleb128 0x13
 1869 0034 00       		.byte	0
 1870 0035 00       		.byte	0
 1871 0036 05       		.uleb128 0x5
 1872 0037 16       		.uleb128 0x16
 1873 0038 00       		.byte	0
 1874 0039 03       		.uleb128 0x3
 1875 003a 0E       		.uleb128 0xe
 1876 003b 3A       		.uleb128 0x3a
 1877 003c 0B       		.uleb128 0xb
 1878 003d 3B       		.uleb128 0x3b
 1879 003e 05       		.uleb128 0x5
 1880 003f 49       		.uleb128 0x49
 1881 0040 13       		.uleb128 0x13
 1882 0041 00       		.byte	0
 1883 0042 00       		.byte	0
 1884 0043 06       		.uleb128 0x6
 1885 0044 35       		.uleb128 0x35
 1886 0045 00       		.byte	0
 1887 0046 49       		.uleb128 0x49
 1888 0047 13       		.uleb128 0x13
 1889 0048 00       		.byte	0
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 49


 1890 0049 00       		.byte	0
 1891 004a 07       		.uleb128 0x7
 1892 004b 2E       		.uleb128 0x2e
 1893 004c 00       		.byte	0
 1894 004d 3F       		.uleb128 0x3f
 1895 004e 19       		.uleb128 0x19
 1896 004f 03       		.uleb128 0x3
 1897 0050 0E       		.uleb128 0xe
 1898 0051 3A       		.uleb128 0x3a
 1899 0052 0B       		.uleb128 0xb
 1900 0053 3B       		.uleb128 0x3b
 1901 0054 0B       		.uleb128 0xb
 1902 0055 27       		.uleb128 0x27
 1903 0056 19       		.uleb128 0x19
 1904 0057 11       		.uleb128 0x11
 1905 0058 01       		.uleb128 0x1
 1906 0059 12       		.uleb128 0x12
 1907 005a 06       		.uleb128 0x6
 1908 005b 40       		.uleb128 0x40
 1909 005c 18       		.uleb128 0x18
 1910 005d 9642     		.uleb128 0x2116
 1911 005f 19       		.uleb128 0x19
 1912 0060 00       		.byte	0
 1913 0061 00       		.byte	0
 1914 0062 08       		.uleb128 0x8
 1915 0063 2E       		.uleb128 0x2e
 1916 0064 01       		.byte	0x1
 1917 0065 3F       		.uleb128 0x3f
 1918 0066 19       		.uleb128 0x19
 1919 0067 03       		.uleb128 0x3
 1920 0068 0E       		.uleb128 0xe
 1921 0069 3A       		.uleb128 0x3a
 1922 006a 0B       		.uleb128 0xb
 1923 006b 3B       		.uleb128 0x3b
 1924 006c 0B       		.uleb128 0xb
 1925 006d 27       		.uleb128 0x27
 1926 006e 19       		.uleb128 0x19
 1927 006f 11       		.uleb128 0x11
 1928 0070 01       		.uleb128 0x1
 1929 0071 12       		.uleb128 0x12
 1930 0072 06       		.uleb128 0x6
 1931 0073 40       		.uleb128 0x40
 1932 0074 18       		.uleb128 0x18
 1933 0075 9642     		.uleb128 0x2116
 1934 0077 19       		.uleb128 0x19
 1935 0078 01       		.uleb128 0x1
 1936 0079 13       		.uleb128 0x13
 1937 007a 00       		.byte	0
 1938 007b 00       		.byte	0
 1939 007c 09       		.uleb128 0x9
 1940 007d 34       		.uleb128 0x34
 1941 007e 00       		.byte	0
 1942 007f 03       		.uleb128 0x3
 1943 0080 0E       		.uleb128 0xe
 1944 0081 3A       		.uleb128 0x3a
 1945 0082 0B       		.uleb128 0xb
 1946 0083 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 50


 1947 0084 0B       		.uleb128 0xb
 1948 0085 49       		.uleb128 0x49
 1949 0086 13       		.uleb128 0x13
 1950 0087 02       		.uleb128 0x2
 1951 0088 18       		.uleb128 0x18
 1952 0089 00       		.byte	0
 1953 008a 00       		.byte	0
 1954 008b 0A       		.uleb128 0xa
 1955 008c 01       		.uleb128 0x1
 1956 008d 01       		.byte	0x1
 1957 008e 49       		.uleb128 0x49
 1958 008f 13       		.uleb128 0x13
 1959 0090 01       		.uleb128 0x1
 1960 0091 13       		.uleb128 0x13
 1961 0092 00       		.byte	0
 1962 0093 00       		.byte	0
 1963 0094 0B       		.uleb128 0xb
 1964 0095 21       		.uleb128 0x21
 1965 0096 00       		.byte	0
 1966 0097 49       		.uleb128 0x49
 1967 0098 13       		.uleb128 0x13
 1968 0099 2F       		.uleb128 0x2f
 1969 009a 0B       		.uleb128 0xb
 1970 009b 00       		.byte	0
 1971 009c 00       		.byte	0
 1972 009d 0C       		.uleb128 0xc
 1973 009e 26       		.uleb128 0x26
 1974 009f 00       		.byte	0
 1975 00a0 49       		.uleb128 0x49
 1976 00a1 13       		.uleb128 0x13
 1977 00a2 00       		.byte	0
 1978 00a3 00       		.byte	0
 1979 00a4 0D       		.uleb128 0xd
 1980 00a5 2E       		.uleb128 0x2e
 1981 00a6 00       		.byte	0
 1982 00a7 3F       		.uleb128 0x3f
 1983 00a8 19       		.uleb128 0x19
 1984 00a9 03       		.uleb128 0x3
 1985 00aa 0E       		.uleb128 0xe
 1986 00ab 3A       		.uleb128 0x3a
 1987 00ac 0B       		.uleb128 0xb
 1988 00ad 3B       		.uleb128 0x3b
 1989 00ae 05       		.uleb128 0x5
 1990 00af 27       		.uleb128 0x27
 1991 00b0 19       		.uleb128 0x19
 1992 00b1 11       		.uleb128 0x11
 1993 00b2 01       		.uleb128 0x1
 1994 00b3 12       		.uleb128 0x12
 1995 00b4 06       		.uleb128 0x6
 1996 00b5 40       		.uleb128 0x40
 1997 00b6 18       		.uleb128 0x18
 1998 00b7 9642     		.uleb128 0x2116
 1999 00b9 19       		.uleb128 0x19
 2000 00ba 00       		.byte	0
 2001 00bb 00       		.byte	0
 2002 00bc 0E       		.uleb128 0xe
 2003 00bd 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 51


 2004 00be 00       		.byte	0
 2005 00bf 3F       		.uleb128 0x3f
 2006 00c0 19       		.uleb128 0x19
 2007 00c1 03       		.uleb128 0x3
 2008 00c2 0E       		.uleb128 0xe
 2009 00c3 3A       		.uleb128 0x3a
 2010 00c4 0B       		.uleb128 0xb
 2011 00c5 3B       		.uleb128 0x3b
 2012 00c6 05       		.uleb128 0x5
 2013 00c7 27       		.uleb128 0x27
 2014 00c8 19       		.uleb128 0x19
 2015 00c9 11       		.uleb128 0x11
 2016 00ca 01       		.uleb128 0x1
 2017 00cb 12       		.uleb128 0x12
 2018 00cc 06       		.uleb128 0x6
 2019 00cd 40       		.uleb128 0x40
 2020 00ce 18       		.uleb128 0x18
 2021 00cf 9742     		.uleb128 0x2117
 2022 00d1 19       		.uleb128 0x19
 2023 00d2 00       		.byte	0
 2024 00d3 00       		.byte	0
 2025 00d4 0F       		.uleb128 0xf
 2026 00d5 2E       		.uleb128 0x2e
 2027 00d6 01       		.byte	0x1
 2028 00d7 3F       		.uleb128 0x3f
 2029 00d8 19       		.uleb128 0x19
 2030 00d9 03       		.uleb128 0x3
 2031 00da 0E       		.uleb128 0xe
 2032 00db 3A       		.uleb128 0x3a
 2033 00dc 0B       		.uleb128 0xb
 2034 00dd 3B       		.uleb128 0x3b
 2035 00de 05       		.uleb128 0x5
 2036 00df 27       		.uleb128 0x27
 2037 00e0 19       		.uleb128 0x19
 2038 00e1 49       		.uleb128 0x49
 2039 00e2 13       		.uleb128 0x13
 2040 00e3 11       		.uleb128 0x11
 2041 00e4 01       		.uleb128 0x1
 2042 00e5 12       		.uleb128 0x12
 2043 00e6 06       		.uleb128 0x6
 2044 00e7 40       		.uleb128 0x40
 2045 00e8 18       		.uleb128 0x18
 2046 00e9 9742     		.uleb128 0x2117
 2047 00eb 19       		.uleb128 0x19
 2048 00ec 01       		.uleb128 0x1
 2049 00ed 13       		.uleb128 0x13
 2050 00ee 00       		.byte	0
 2051 00ef 00       		.byte	0
 2052 00f0 10       		.uleb128 0x10
 2053 00f1 05       		.uleb128 0x5
 2054 00f2 00       		.byte	0
 2055 00f3 03       		.uleb128 0x3
 2056 00f4 0E       		.uleb128 0xe
 2057 00f5 3A       		.uleb128 0x3a
 2058 00f6 0B       		.uleb128 0xb
 2059 00f7 3B       		.uleb128 0x3b
 2060 00f8 05       		.uleb128 0x5
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 52


 2061 00f9 49       		.uleb128 0x49
 2062 00fa 13       		.uleb128 0x13
 2063 00fb 02       		.uleb128 0x2
 2064 00fc 18       		.uleb128 0x18
 2065 00fd 00       		.byte	0
 2066 00fe 00       		.byte	0
 2067 00ff 11       		.uleb128 0x11
 2068 0100 34       		.uleb128 0x34
 2069 0101 00       		.byte	0
 2070 0102 03       		.uleb128 0x3
 2071 0103 0E       		.uleb128 0xe
 2072 0104 3A       		.uleb128 0x3a
 2073 0105 0B       		.uleb128 0xb
 2074 0106 3B       		.uleb128 0x3b
 2075 0107 05       		.uleb128 0x5
 2076 0108 49       		.uleb128 0x49
 2077 0109 13       		.uleb128 0x13
 2078 010a 02       		.uleb128 0x2
 2079 010b 18       		.uleb128 0x18
 2080 010c 00       		.byte	0
 2081 010d 00       		.byte	0
 2082 010e 12       		.uleb128 0x12
 2083 010f 2E       		.uleb128 0x2e
 2084 0110 01       		.byte	0x1
 2085 0111 3F       		.uleb128 0x3f
 2086 0112 19       		.uleb128 0x19
 2087 0113 03       		.uleb128 0x3
 2088 0114 0E       		.uleb128 0xe
 2089 0115 3A       		.uleb128 0x3a
 2090 0116 0B       		.uleb128 0xb
 2091 0117 3B       		.uleb128 0x3b
 2092 0118 05       		.uleb128 0x5
 2093 0119 27       		.uleb128 0x27
 2094 011a 19       		.uleb128 0x19
 2095 011b 49       		.uleb128 0x49
 2096 011c 13       		.uleb128 0x13
 2097 011d 11       		.uleb128 0x11
 2098 011e 01       		.uleb128 0x1
 2099 011f 12       		.uleb128 0x12
 2100 0120 06       		.uleb128 0x6
 2101 0121 40       		.uleb128 0x40
 2102 0122 18       		.uleb128 0x18
 2103 0123 9642     		.uleb128 0x2116
 2104 0125 19       		.uleb128 0x19
 2105 0126 01       		.uleb128 0x1
 2106 0127 13       		.uleb128 0x13
 2107 0128 00       		.byte	0
 2108 0129 00       		.byte	0
 2109 012a 13       		.uleb128 0x13
 2110 012b 2E       		.uleb128 0x2e
 2111 012c 01       		.byte	0x1
 2112 012d 3F       		.uleb128 0x3f
 2113 012e 19       		.uleb128 0x19
 2114 012f 03       		.uleb128 0x3
 2115 0130 0E       		.uleb128 0xe
 2116 0131 3A       		.uleb128 0x3a
 2117 0132 0B       		.uleb128 0xb
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 53


 2118 0133 3B       		.uleb128 0x3b
 2119 0134 05       		.uleb128 0x5
 2120 0135 27       		.uleb128 0x27
 2121 0136 19       		.uleb128 0x19
 2122 0137 11       		.uleb128 0x11
 2123 0138 01       		.uleb128 0x1
 2124 0139 12       		.uleb128 0x12
 2125 013a 06       		.uleb128 0x6
 2126 013b 40       		.uleb128 0x40
 2127 013c 18       		.uleb128 0x18
 2128 013d 9742     		.uleb128 0x2117
 2129 013f 19       		.uleb128 0x19
 2130 0140 01       		.uleb128 0x1
 2131 0141 13       		.uleb128 0x13
 2132 0142 00       		.byte	0
 2133 0143 00       		.byte	0
 2134 0144 14       		.uleb128 0x14
 2135 0145 2E       		.uleb128 0x2e
 2136 0146 01       		.byte	0x1
 2137 0147 3F       		.uleb128 0x3f
 2138 0148 19       		.uleb128 0x19
 2139 0149 03       		.uleb128 0x3
 2140 014a 0E       		.uleb128 0xe
 2141 014b 3A       		.uleb128 0x3a
 2142 014c 0B       		.uleb128 0xb
 2143 014d 3B       		.uleb128 0x3b
 2144 014e 05       		.uleb128 0x5
 2145 014f 27       		.uleb128 0x27
 2146 0150 19       		.uleb128 0x19
 2147 0151 11       		.uleb128 0x11
 2148 0152 01       		.uleb128 0x1
 2149 0153 12       		.uleb128 0x12
 2150 0154 06       		.uleb128 0x6
 2151 0155 40       		.uleb128 0x40
 2152 0156 18       		.uleb128 0x18
 2153 0157 9642     		.uleb128 0x2116
 2154 0159 19       		.uleb128 0x19
 2155 015a 01       		.uleb128 0x1
 2156 015b 13       		.uleb128 0x13
 2157 015c 00       		.byte	0
 2158 015d 00       		.byte	0
 2159 015e 15       		.uleb128 0x15
 2160 015f 34       		.uleb128 0x34
 2161 0160 00       		.byte	0
 2162 0161 03       		.uleb128 0x3
 2163 0162 0E       		.uleb128 0xe
 2164 0163 3A       		.uleb128 0x3a
 2165 0164 0B       		.uleb128 0xb
 2166 0165 3B       		.uleb128 0x3b
 2167 0166 0B       		.uleb128 0xb
 2168 0167 49       		.uleb128 0x49
 2169 0168 13       		.uleb128 0x13
 2170 0169 3F       		.uleb128 0x3f
 2171 016a 19       		.uleb128 0x19
 2172 016b 02       		.uleb128 0x2
 2173 016c 18       		.uleb128 0x18
 2174 016d 00       		.byte	0
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 54


 2175 016e 00       		.byte	0
 2176 016f 00       		.byte	0
 2177              		.section	.debug_aranges,"",%progbits
 2178 0000 A4000000 		.4byte	0xa4
 2179 0004 0200     		.2byte	0x2
 2180 0006 00000000 		.4byte	.Ldebug_info0
 2181 000a 04       		.byte	0x4
 2182 000b 00       		.byte	0
 2183 000c 0000     		.2byte	0
 2184 000e 0000     		.2byte	0
 2185 0010 00000000 		.4byte	.LFB0
 2186 0014 24000000 		.4byte	.LFE0-.LFB0
 2187 0018 00000000 		.4byte	.LFB1
 2188 001c F0010000 		.4byte	.LFE1-.LFB1
 2189 0020 00000000 		.4byte	.LFB2
 2190 0024 28000000 		.4byte	.LFE2-.LFB2
 2191 0028 00000000 		.4byte	.LFB3
 2192 002c 18000000 		.4byte	.LFE3-.LFB3
 2193 0030 00000000 		.4byte	.LFB4
 2194 0034 1C000000 		.4byte	.LFE4-.LFB4
 2195 0038 00000000 		.4byte	.LFB5
 2196 003c 1C000000 		.4byte	.LFE5-.LFB5
 2197 0040 00000000 		.4byte	.LFB6
 2198 0044 48000000 		.4byte	.LFE6-.LFB6
 2199 0048 00000000 		.4byte	.LFB7
 2200 004c 44000000 		.4byte	.LFE7-.LFB7
 2201 0050 00000000 		.4byte	.LFB8
 2202 0054 1C000000 		.4byte	.LFE8-.LFB8
 2203 0058 00000000 		.4byte	.LFB9
 2204 005c 30000000 		.4byte	.LFE9-.LFB9
 2205 0060 00000000 		.4byte	.LFB10
 2206 0064 2C000000 		.4byte	.LFE10-.LFB10
 2207 0068 00000000 		.4byte	.LFB11
 2208 006c 1C000000 		.4byte	.LFE11-.LFB11
 2209 0070 00000000 		.4byte	.LFB12
 2210 0074 1C000000 		.4byte	.LFE12-.LFB12
 2211 0078 00000000 		.4byte	.LFB13
 2212 007c 30000000 		.4byte	.LFE13-.LFB13
 2213 0080 00000000 		.4byte	.LFB14
 2214 0084 2C000000 		.4byte	.LFE14-.LFB14
 2215 0088 00000000 		.4byte	.LFB15
 2216 008c A4000000 		.4byte	.LFE15-.LFB15
 2217 0090 00000000 		.4byte	.LFB16
 2218 0094 98000000 		.4byte	.LFE16-.LFB16
 2219 0098 00000000 		.4byte	.LFB17
 2220 009c 80000000 		.4byte	.LFE17-.LFB17
 2221 00a0 00000000 		.4byte	0
 2222 00a4 00000000 		.4byte	0
 2223              		.section	.debug_ranges,"",%progbits
 2224              	.Ldebug_ranges0:
 2225 0000 00000000 		.4byte	.LFB0
 2226 0004 24000000 		.4byte	.LFE0
 2227 0008 00000000 		.4byte	.LFB1
 2228 000c F0010000 		.4byte	.LFE1
 2229 0010 00000000 		.4byte	.LFB2
 2230 0014 28000000 		.4byte	.LFE2
 2231 0018 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 55


 2232 001c 18000000 		.4byte	.LFE3
 2233 0020 00000000 		.4byte	.LFB4
 2234 0024 1C000000 		.4byte	.LFE4
 2235 0028 00000000 		.4byte	.LFB5
 2236 002c 1C000000 		.4byte	.LFE5
 2237 0030 00000000 		.4byte	.LFB6
 2238 0034 48000000 		.4byte	.LFE6
 2239 0038 00000000 		.4byte	.LFB7
 2240 003c 44000000 		.4byte	.LFE7
 2241 0040 00000000 		.4byte	.LFB8
 2242 0044 1C000000 		.4byte	.LFE8
 2243 0048 00000000 		.4byte	.LFB9
 2244 004c 30000000 		.4byte	.LFE9
 2245 0050 00000000 		.4byte	.LFB10
 2246 0054 2C000000 		.4byte	.LFE10
 2247 0058 00000000 		.4byte	.LFB11
 2248 005c 1C000000 		.4byte	.LFE11
 2249 0060 00000000 		.4byte	.LFB12
 2250 0064 1C000000 		.4byte	.LFE12
 2251 0068 00000000 		.4byte	.LFB13
 2252 006c 30000000 		.4byte	.LFE13
 2253 0070 00000000 		.4byte	.LFB14
 2254 0074 2C000000 		.4byte	.LFE14
 2255 0078 00000000 		.4byte	.LFB15
 2256 007c A4000000 		.4byte	.LFE15
 2257 0080 00000000 		.4byte	.LFB16
 2258 0084 98000000 		.4byte	.LFE16
 2259 0088 00000000 		.4byte	.LFB17
 2260 008c 80000000 		.4byte	.LFE17
 2261 0090 00000000 		.4byte	0
 2262 0094 00000000 		.4byte	0
 2263              		.section	.debug_line,"",%progbits
 2264              	.Ldebug_line0:
 2265 0000 32020000 		.section	.debug_str,"MS",%progbits,1
 2265      02004400 
 2265      00000201 
 2265      FB0E0D00 
 2265      01010101 
 2266              	.LASF10:
 2267 0000 75696E74 		.ascii	"uint16\000"
 2267      313600
 2268              	.LASF48:
 2269 0007 61646347 		.ascii	"adcGain\000"
 2269      61696E00 
 2270              	.LASF23:
 2271 000f 636F756E 		.ascii	"counts\000"
 2271      747300
 2272              	.LASF29:
 2273 0016 4144435F 		.ascii	"ADC_1_StopConvert\000"
 2273      315F5374 
 2273      6F70436F 
 2273      6E766572 
 2273      7400
 2274              	.LASF61:
 2275 0028 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC_1.c\000"
 2275      6E657261 
 2275      7465645F 
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 56


 2275      536F7572 
 2275      63655C50 
 2276              	.LASF26:
 2277 0049 4144435F 		.ascii	"ADC_1_Enable\000"
 2277      315F456E 
 2277      61626C65 
 2277      00
 2278              	.LASF6:
 2279 0056 6C6F6E67 		.ascii	"long long int\000"
 2279      206C6F6E 
 2279      6720696E 
 2279      7400
 2280              	.LASF0:
 2281 0064 7369676E 		.ascii	"signed char\000"
 2281      65642063 
 2281      68617200 
 2282              	.LASF36:
 2283 0070 4144435F 		.ascii	"ADC_1_Init\000"
 2283      315F496E 
 2283      697400
 2284              	.LASF7:
 2285 007b 6C6F6E67 		.ascii	"long long unsigned int\000"
 2285      206C6F6E 
 2285      6720756E 
 2285      7369676E 
 2285      65642069 
 2286              	.LASF27:
 2287 0092 4144435F 		.ascii	"ADC_1_Stop\000"
 2287      315F5374 
 2287      6F7000
 2288              	.LASF13:
 2289 009d 696E7433 		.ascii	"int32\000"
 2289      3200
 2290              	.LASF4:
 2291 00a3 6C6F6E67 		.ascii	"long int\000"
 2291      20696E74 
 2291      00
 2292              	.LASF9:
 2293 00ac 75696E74 		.ascii	"uint8\000"
 2293      3800
 2294              	.LASF16:
 2295 00b2 646F7562 		.ascii	"double\000"
 2295      6C6500
 2296              	.LASF37:
 2297 00b9 4144435F 		.ascii	"ADC_1_SetChanMask\000"
 2297      315F5365 
 2297      74436861 
 2297      6E4D6173 
 2297      6B00
 2298              	.LASF43:
 2299 00cb 4144435F 		.ascii	"ADC_1_SetLimitMask\000"
 2299      315F5365 
 2299      744C696D 
 2299      69744D61 
 2299      736B00
 2300              	.LASF57:
 2301 00de 4144435F 		.ascii	"ADC_1_initVar\000"
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 57


 2301      315F696E 
 2301      69745661 
 2301      7200
 2302              	.LASF11:
 2303 00ec 75696E74 		.ascii	"uint32\000"
 2303      333200
 2304              	.LASF38:
 2305 00f3 6D61736B 		.ascii	"mask\000"
 2305      00
 2306              	.LASF25:
 2307 00f8 4144435F 		.ascii	"ADC_1_Start\000"
 2307      315F5374 
 2307      61727400 
 2308              	.LASF33:
 2309 0104 7265744D 		.ascii	"retMode\000"
 2309      6F646500 
 2310              	.LASF8:
 2311 010c 756E7369 		.ascii	"unsigned int\000"
 2311      676E6564 
 2311      20696E74 
 2311      00
 2312              	.LASF53:
 2313 0119 75566F6C 		.ascii	"uVolts\000"
 2313      747300
 2314              	.LASF28:
 2315 0120 4144435F 		.ascii	"ADC_1_StartConvert\000"
 2315      315F5374 
 2315      61727443 
 2315      6F6E7665 
 2315      727400
 2316              	.LASF5:
 2317 0133 6C6F6E67 		.ascii	"long unsigned int\000"
 2317      20756E73 
 2317      69676E65 
 2317      6420696E 
 2317      7400
 2318              	.LASF55:
 2319 0145 766F6C74 		.ascii	"volts\000"
 2319      7300
 2320              	.LASF22:
 2321 014b 746D7052 		.ascii	"tmpRegVal\000"
 2321      65675661 
 2321      6C00
 2322              	.LASF3:
 2323 0155 73686F72 		.ascii	"short unsigned int\000"
 2323      7420756E 
 2323      7369676E 
 2323      65642069 
 2323      6E7400
 2324              	.LASF49:
 2325 0168 4144435F 		.ascii	"ADC_1_CountsTo_mVolts\000"
 2325      315F436F 
 2325      756E7473 
 2325      546F5F6D 
 2325      566F6C74 
 2326              	.LASF39:
 2327 017e 4144435F 		.ascii	"ADC_1_SetLowLimit\000"
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 58


 2327      315F5365 
 2327      744C6F77 
 2327      4C696D69 
 2327      7400
 2328              	.LASF41:
 2329 0190 4144435F 		.ascii	"ADC_1_SetHighLimit\000"
 2329      315F5365 
 2329      74486967 
 2329      684C696D 
 2329      697400
 2330              	.LASF51:
 2331 01a3 6D566F6C 		.ascii	"mVolts\000"
 2331      747300
 2332              	.LASF19:
 2333 01aa 72656733 		.ascii	"reg32\000"
 2333      3200
 2334              	.LASF14:
 2335 01b0 666C6F61 		.ascii	"float32\000"
 2335      74333200 
 2336              	.LASF20:
 2337 01b8 73697A65 		.ascii	"sizetype\000"
 2337      74797065 
 2337      00
 2338              	.LASF40:
 2339 01c1 6C6F774C 		.ascii	"lowLimit\000"
 2339      696D6974 
 2339      00
 2340              	.LASF56:
 2341 01ca 4144435F 		.ascii	"ADC_1_channelsConfig\000"
 2341      315F6368 
 2341      616E6E65 
 2341      6C73436F 
 2341      6E666967 
 2342              	.LASF47:
 2343 01df 4144435F 		.ascii	"ADC_1_SetGain\000"
 2343      315F5365 
 2343      74476169 
 2343      6E00
 2344              	.LASF17:
 2345 01ed 696E7436 		.ascii	"int64\000"
 2345      3400
 2346              	.LASF15:
 2347 01f3 666C6F61 		.ascii	"float\000"
 2347      7400
 2348              	.LASF60:
 2349 01f9 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2349      4320342E 
 2349      382E3420 
 2349      32303134 
 2349      30353236 
 2350 022c 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2350      20726576 
 2350      6973696F 
 2350      6E203231 
 2350      31333538 
 2351 025f 30202D66 		.ascii	"0 -ffunction-sections\000"
 2351      66756E63 
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 59


 2351      74696F6E 
 2351      2D736563 
 2351      74696F6E 
 2352              	.LASF62:
 2353 0275 433A5C55 		.ascii	"C:\\Users\\Snufkin\\Documents\\GitHub\\KingFunk2\\C"
 2353      73657273 
 2353      5C536E75 
 2353      666B696E 
 2353      5C446F63 
 2354 02a2 52545F74 		.ascii	"RT_timer\\CRT_timer.cydsn\000"
 2354      696D6572 
 2354      5C435254 
 2354      5F74696D 
 2354      65722E63 
 2355              	.LASF58:
 2356 02bb 4144435F 		.ascii	"ADC_1_offset\000"
 2356      315F6F66 
 2356      66736574 
 2356      00
 2357              	.LASF31:
 2358 02c8 4144435F 		.ascii	"ADC_1_IsEndConversion\000"
 2358      315F4973 
 2358      456E6443 
 2358      6F6E7665 
 2358      7273696F 
 2359              	.LASF44:
 2360 02de 4144435F 		.ascii	"ADC_1_SetSatMask\000"
 2360      315F5365 
 2360      74536174 
 2360      4D61736B 
 2360      00
 2361              	.LASF1:
 2362 02ef 756E7369 		.ascii	"unsigned char\000"
 2362      676E6564 
 2362      20636861 
 2362      7200
 2363              	.LASF32:
 2364 02fd 4144435F 		.ascii	"ADC_1_GetResult16\000"
 2364      315F4765 
 2364      74526573 
 2364      756C7431 
 2364      3600
 2365              	.LASF59:
 2366 030f 4144435F 		.ascii	"ADC_1_countsPer10Volt\000"
 2366      315F636F 
 2366      756E7473 
 2366      50657231 
 2366      30566F6C 
 2367              	.LASF2:
 2368 0325 73686F72 		.ascii	"short int\000"
 2368      7420696E 
 2368      7400
 2369              	.LASF21:
 2370 032f 63684E75 		.ascii	"chNum\000"
 2370      6D00
 2371              	.LASF34:
 2372 0335 6368616E 		.ascii	"chan\000"
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc0G7C3A.s 			page 60


 2372      00
 2373              	.LASF18:
 2374 033a 63686172 		.ascii	"char\000"
 2374      00
 2375              	.LASF54:
 2376 033f 4144435F 		.ascii	"ADC_1_CountsTo_Volts\000"
 2376      315F436F 
 2376      756E7473 
 2376      546F5F56 
 2376      6F6C7473 
 2377              	.LASF46:
 2378 0354 6F666673 		.ascii	"offset\000"
 2378      657400
 2379              	.LASF50:
 2380 035b 61646343 		.ascii	"adcCounts\000"
 2380      6F756E74 
 2380      7300
 2381              	.LASF30:
 2382 0365 73746174 		.ascii	"status\000"
 2382      757300
 2383              	.LASF24:
 2384 036c 4144435F 		.ascii	"ADC_1_InputsPlacement\000"
 2384      315F496E 
 2384      70757473 
 2384      506C6163 
 2384      656D656E 
 2385              	.LASF42:
 2386 0382 68696768 		.ascii	"highLimit\000"
 2386      4C696D69 
 2386      7400
 2387              	.LASF45:
 2388 038c 4144435F 		.ascii	"ADC_1_SetOffset\000"
 2388      315F5365 
 2388      744F6666 
 2388      73657400 
 2389              	.LASF12:
 2390 039c 696E7431 		.ascii	"int16\000"
 2390      3600
 2391              	.LASF35:
 2392 03a2 72657375 		.ascii	"result\000"
 2392      6C7400
 2393              	.LASF52:
 2394 03a9 4144435F 		.ascii	"ADC_1_CountsTo_uVolts\000"
 2394      315F436F 
 2394      756E7473 
 2394      546F5F75 
 2394      566F6C74 
 2395              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
